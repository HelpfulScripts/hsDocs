{
	"id": 0,
	"name": "hsDocs",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"DocSets\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/DocSets.ts",
			"comment": {
				"shortText": "DocSets.ts. Loads the doc.json files to process and display as documentation.\nProcessing occurs in these steps:\n1. Load the index.json file that contains a list of doc.json files to load, one for each library to show\n2. Load each doc.json file, which describes a library\n3. Call DocSets.add to add the library name to the registry and create an index of entries for the library"
			},
			"children": [
				{
					"id": 2,
					"name": "DocSets",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "DocSets object. Keeps a list of registered docsets and\nprovides access to elements of each docset."
					},
					"children": [
						{
							"id": 3,
							"name": "gList",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Contains references to the docsets and all elements per docset, accessible per ID."
							},
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 25,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 7,
											"name": "docs",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "DocSets.ts",
													"line": 25,
													"character": 57
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 6,
											"name": "index",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "DocSets.ts",
													"line": 25,
													"character": 48
												}
											],
											"type": {
												"type": "reference",
												"name": "__type"
											}
										},
										{
											"id": 5,
											"name": "set",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "DocSets.ts",
													"line": 25,
													"character": 32
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												7,
												6,
												5
											]
										}
									]
								}
							},
							"defaultValue": " <{set:string[], index:{}, docs:[string]}>{set:<string[]>[], index:{}, docs:<string[]>[]}"
						},
						{
							"id": 8,
							"name": "gTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 26,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 10,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds the docset in `content` to the `gList` at the position of `file` in `DocSets.gList.docs`."
									},
									"parameters": [
										{
											"id": 11,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the docSet content to add."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 12,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the file name from which the content was read.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 33,
									"character": 21
								}
							]
						},
						{
							"id": 16,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 17,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the specified documentation element.\nWhen called without parameters, a `string[lib]` of available docSets is returned.\nWhen called with only `lib` specified, the corresponding docSet overview is returned."
									},
									"parameters": [
										{
											"id": 18,
											"name": "lib",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "specifies the docset to scan."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 19,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "specifies the element within the docSet, either by its id number, or by its path\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 59,
									"character": 21
								}
							]
						},
						{
							"id": 20,
							"name": "loadIndexSet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 21,
									"name": "loadIndexSet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Loads `index.json` from the directory specified in `dir`.\nEach entry in the index is interpreted as a docset and loaded."
									},
									"parameters": [
										{
											"id": 22,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index file to read\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 77,
									"character": 31
								}
							]
						},
						{
							"id": 13,
							"name": "loadList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 14,
									"name": "loadList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "loads an index set and the docsets it contains from driectory `dir`.",
										"returns": "a promise to load the index set\n"
									},
									"parameters": [
										{
											"id": 15,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the optional directory to read from. If unspecified,\nread from the index file specified by {@link DocSets.FILE `FILE`}."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 47,
									"character": 26
								}
							]
						},
						{
							"id": 23,
							"name": "title",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 24,
									"name": "title",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 91,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3,
								8
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								9,
								16,
								20,
								13,
								23
							]
						}
					],
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 23,
							"character": 20
						}
					]
				},
				{
					"id": 25,
					"name": "FILE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "the default location for the index .json files, relative to the web page:\n`'./data/index.json'`"
					},
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 16,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"./data/index.json\""
				},
				{
					"id": 26,
					"name": "loadDocSet",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 27,
							"name": "loadDocSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Loads a docset specified by file from the directory `dir`.\nOnce received, the docset is registered in `modules` via the `add` method."
							},
							"parameters": [
								{
									"id": 28,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the directory to read from"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the `json` file to load as docset\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 100,
							"character": 19
						}
					]
				},
				{
					"id": 30,
					"name": "recursiveIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 31,
							"name": "recursiveIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "recurses through the docset and registers all `children` entries of an entry by id,\nstarting with the root entry."
							},
							"parameters": [
								{
									"id": 32,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the docset object literal to traverse"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 33,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the index in which to register the entries"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 34,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the docset name, used for name validation\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 116,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						25
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						26,
						30
					]
				}
			],
			"sources": [
				{
					"fileName": "DocSets.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 276,
			"name": "\"Site\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/Site.ts",
			"comment": {
				"shortText": "Site documentation"
			},
			"children": [
				{
					"id": 278,
					"name": "FooterHeight",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 13,
							"character": 18
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "10px"
					},
					"defaultValue": "\"10px\""
				},
				{
					"id": 279,
					"name": "LeftNavWidth",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 14,
							"character": 18
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "200px"
					},
					"defaultValue": "\"200px\""
				},
				{
					"id": 281,
					"name": "SiteLink",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "https://github.com/HelpfulScripts/hsDocs"
					},
					"defaultValue": "\"https://github.com/HelpfulScripts/hsDocs\""
				},
				{
					"id": 280,
					"name": "SiteName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 15,
							"character": 14
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "HSDocs"
					},
					"defaultValue": "\"HSDocs\""
				},
				{
					"id": 277,
					"name": "TitleHeight",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 12,
							"character": 17
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "30px"
					},
					"defaultValue": "\"30px\""
				},
				{
					"id": 317,
					"name": "init",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 318,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 59,
							"character": 20
						}
					]
				},
				{
					"id": 282,
					"name": "myConfig",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 283,
							"name": "Layout",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 286,
									"name": "content",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 22,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reflection",
													"declaration": {
														"id": 287,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 288,
																"name": "Layout",
																"kind": 2097152,
																"kindString": "Object literal",
																"flags": {},
																"children": [
																	{
																		"id": 289,
																		"name": "columns",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "Site.ts",
																				"line": 24,
																				"character": 23
																			}
																		],
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		"defaultValue": " [LeftNavWidth, \"fill\"]"
																	},
																	{
																		"id": 291,
																		"name": "content",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "Site.ts",
																				"line": 26,
																				"character": 23
																			}
																		],
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 292,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"children": [
																								{
																									"id": 293,
																									"name": "Layout",
																									"kind": 2097152,
																									"kindString": "Object literal",
																									"flags": {},
																									"children": [
																										{
																											"id": 295,
																											"name": "content",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "Site.ts",
																													"line": 29,
																													"character": 31
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": " SiteName"
																										},
																										{
																											"id": 294,
																											"name": "css",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "Site.ts",
																													"line": 28,
																													"character": 27
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": "\".hs-site-title\""
																										},
																										{
																											"id": 296,
																											"name": "href",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "Site.ts",
																													"line": 30,
																													"character": 28
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": " SiteLink"
																										}
																									],
																									"groups": [
																										{
																											"title": "Variables",
																											"kind": 32,
																											"children": [
																												295,
																												294,
																												296
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "Site.ts",
																											"line": 27,
																											"character": 28
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "object"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Object literals",
																									"kind": 2097152,
																									"children": [
																										293
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 297,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"children": [
																								{
																									"id": 298,
																									"name": "DocsMenu",
																									"kind": 2097152,
																									"kindString": "Object literal",
																									"flags": {},
																									"children": [
																										{
																											"id": 299,
																											"name": "docSet",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "Site.ts",
																													"line": 32,
																													"character": 43
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": "\"./data/index.json\""
																										}
																									],
																									"groups": [
																										{
																											"title": "Variables",
																											"kind": 32,
																											"children": [
																												299
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "Site.ts",
																											"line": 32,
																											"character": 30
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "object"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Object literals",
																									"kind": 2097152,
																									"children": [
																										298
																									]
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		"defaultValue": " [\n                    { Layout:    { \n                        css: '.hs-site-title',\n                        content: SiteName, \n                        href: SiteLink \n                    }},\n                    { DocsMenu:    { docSet:\"./data/index.json\"}}\n                ]"
																	},
																	{
																		"id": 290,
																		"name": "css",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "Site.ts",
																				"line": 25,
																				"character": 19
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"defaultValue": "\".hs-site-header\""
																	}
																],
																"groups": [
																	{
																		"title": "Variables",
																		"kind": 32,
																		"children": [
																			289,
																			291,
																			290
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "Site.ts",
																		"line": 23,
																		"character": 18
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "object"
																}
															}
														],
														"groups": [
															{
																"title": "Object literals",
																"kind": 2097152,
																"children": [
																	288
																]
															}
														]
													}
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 300,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 301,
																"name": "Layout",
																"kind": 2097152,
																"kindString": "Object literal",
																"flags": {},
																"children": [
																	{
																		"id": 302,
																		"name": "columns",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "Site.ts",
																				"line": 36,
																				"character": 23
																			}
																		],
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		"defaultValue": " [LeftNavWidth, \"fill\"]"
																	},
																	{
																		"id": 303,
																		"name": "content",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "Site.ts",
																				"line": 37,
																				"character": 23
																			}
																		],
																		"type": {
																			"type": "array",
																			"elementType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 304,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"children": [
																								{
																									"id": 305,
																									"name": "LeftNav",
																									"kind": 32,
																									"kindString": "Variable",
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "Site.ts",
																											"line": 38,
																											"character": 29
																										}
																									],
																									"type": {
																										"type": "reflection",
																										"declaration": {
																											"id": 306,
																											"name": "__type",
																											"kind": 65536,
																											"kindString": "Type literal",
																											"flags": {}
																										}
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Variables",
																									"kind": 32,
																									"children": [
																										305
																									]
																								}
																							]
																						}
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 307,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"children": [
																								{
																									"id": 308,
																									"name": "MainDetail",
																									"kind": 32,
																									"kindString": "Variable",
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "Site.ts",
																											"line": 39,
																											"character": 32
																										}
																									],
																									"type": {
																										"type": "reflection",
																										"declaration": {
																											"id": 309,
																											"name": "__type",
																											"kind": 65536,
																											"kindString": "Type literal",
																											"flags": {}
																										}
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Variables",
																									"kind": 32,
																									"children": [
																										308
																									]
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		"defaultValue": " [\n                    { LeftNav:    {}},\n                    { MainDetail: {}}\n                ]"
																	}
																],
																"groups": [
																	{
																		"title": "Variables",
																		"kind": 32,
																		"children": [
																			302,
																			303
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "Site.ts",
																		"line": 35,
																		"character": 18
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "object"
																}
															}
														],
														"groups": [
															{
																"title": "Object literals",
																"kind": 2097152,
																"children": [
																	301
																]
															}
														]
													}
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 310,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 311,
																"name": "Layout",
																"kind": 2097152,
																"kindString": "Object literal",
																"flags": {},
																"children": [
																	{
																		"id": 313,
																		"name": "content",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "Site.ts",
																				"line": 44,
																				"character": 23
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"defaultValue": "\"(c) Helpful Scripts\""
																	},
																	{
																		"id": 312,
																		"name": "css",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "Site.ts",
																				"line": 43,
																				"character": 19
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		},
																		"defaultValue": "\".hs-site-footer\""
																	}
																],
																"groups": [
																	{
																		"title": "Variables",
																		"kind": 32,
																		"children": [
																			313,
																			312
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "Site.ts",
																		"line": 42,
																		"character": 20
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "object"
																}
															}
														],
														"groups": [
															{
																"title": "Object literals",
																"kind": 2097152,
																"children": [
																	311
																]
															}
														]
													}
												}
											]
										}
									},
									"defaultValue": " [{\n            Layout:{ // top row\n                columns: [LeftNavWidth, \"fill\"],\n                css: '.hs-site-header',\n                content: [\n                    { Layout:    { \n                        css: '.hs-site-title',\n                        content: SiteName, \n                        href: SiteLink \n                    }},\n                    { DocsMenu:    { docSet:\"./data/index.json\"}}\n                ]                \n            }},{\n            Layout:{ // main part\n                columns: [LeftNavWidth, \"fill\"], \n                content: [\n                    { LeftNav:    {}},\n                    { MainDetail: {}}\n                ]                \n            }},\n            { Layout: { // footer\n                css: '.hs-site-footer',\n                content: '(c) Helpful Scripts'\n            }}\n        ]"
								},
								{
									"id": 285,
									"name": "css",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 21,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".hs-site\""
								},
								{
									"id": 284,
									"name": "rows",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 20,
											"character": 12
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": "  [TitleHeight, \"fill\", FooterHeight]"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										286,
										285,
										284
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 19,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 314,
							"name": "route",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 315,
									"name": "default",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 49,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/api\""
								},
								{
									"id": 316,
									"name": "paths",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 50,
											"character": 13
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": " [\n            '/api',             // defines `http://localhost/#!/api/\n            '/api/:lib',        // defines `http://localhost/#!/api/:hsLib\n            '/api/:lib/:field'  // defines `http://localhost/#!/api/:hsLib/:id        \n        ]"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										315,
										316
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 48,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								283,
								314
							]
						}
					],
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 18,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						278,
						279,
						281,
						280,
						277
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						317
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						282
					]
				}
			],
			"sources": [
				{
					"fileName": "Site.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 319,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/index.ts",
			"comment": {
				"shortText": "Progam entry point. Initiates loading the docsets and setting up a router structure"
			},
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 133,
			"name": "\"markdown\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/markdown.ts",
			"children": [
				{
					"id": 134,
					"name": "showdown",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "markdown.ts",
							"line": 1,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require('showdown')"
				},
				{
					"id": 135,
					"name": "markDown",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 136,
							"name": "markDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "process a markdown comment string and returns the equivalent html syntax.",
								"returns": "the marked down comment\n"
							},
							"parameters": [
								{
									"id": 137,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment to markdown"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 138,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "if true, only the first paragraph is returned"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 139,
									"name": "currentRoute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " m.route.get()"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "markdown.ts",
							"line": 10,
							"character": 24
						}
					]
				},
				{
					"id": 140,
					"name": "substituteLinks",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 141,
							"name": "substituteLinks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "replaces link statements in the comment with hyperlink references.\nThe format of a link statement is \"{@link *docset*:*path* linked text}\", where\n- *docset* is the name of the docset\n- *path* is the structural path of a component with steps on the path separated by a period,\n   following the pattern *module*.*entity*.*member* with\n    - *module* = the name of the module file\n    - *entity* = [*class* | *function* | *variable*]\n    - *member* = [*method* | *variable*]\n- if *path* is omittied, or is `overview`, the library overview will be shown.",
								"text": "Examples:\n- '{@link hsDocs: Doc Overview}' -> {@link hsDocs: Doc Overview}\n- '{@link hsDocs:DocSets.DocSets.add the `adds` function}' --> {@link hsDocs:DocSets.DocSets.add the `adds` function}\n",
								"returns": "the comment with substituted links\n"
							},
							"parameters": [
								{
									"id": 142,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment in which to replace the links"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 143,
									"name": "currentRoute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "markdown.ts",
							"line": 45,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						134
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						135,
						140
					]
				}
			],
			"sources": [
				{
					"fileName": "markdown.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 320,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/overview.ts",
			"comment": {
				"shortText": "# hsDocs",
				"text": "Helpful Scripts code documentation viewer.\n[`[Github page]`](https://github.com/HelpfulScripts/hsDocs)\n[`[Coverage Info]`](./data/src/hsDocs/coverage/)\n\n___\nhsDocs.js is a code documentation viewer for [Typescript](https://www.typescriptlang.org) projects.\nIt renders JSON documentation files as created by [typedoc](http://typedoc.org).\n\n## Creating the Documentation DocSet\nFollow the instruction for `typedoc` in commenting the code and set the `json` option to create a\njson file containing the documentation. See the Configuration section below for details.\n\nIn addition to the documented source files, `hsDocs` recognizes a special **`overview.ts`** file\nthat will be displayed as a project overview.\nFor this to work, `typedoc` requires the file to have two separate comment entries.\nIf the second comment is missing, `typedoc` will not generate a comment in the DocSet.\n\nDocSets are shown as menu tabs across the top of the window. To include a DocSet in the menu, ensure that the\ncorresponding documentation `.json` file is copied into the `data` folder inside the `hsDocs` staging location\nfor the http server. Then edit the `index.json` file to include the documentation file name in the \"docs\" section.\n\n### Modules\nEach source file is considered to be a `module`. Modules are shown in the left-hand overview panel of the main `hsDocs` window.\nAlternatively, a `@module` statement in the summary comment at the top of a file will create, or add to, a module of the specified name.\nThis encourages to separate code into files without cluttering the overview.\n\n### Linking across the docsets\nLinks to items across the docsets can be placed via a link directive:\n- \"{@link [*docset*:]*module*.*item* linked text}\",\n\nwhere\n- *docset* optional; the name of the docset. If omitted, a link within the current docSet will be created\n- *module* is name of the module to link to;\nif *module* is `overview`, or unspecified, the link will point to the docset overview page.\n- *item* is the name, or period-separated path, of the item within the module.\n- *linked text* is displayed with a link to path within module\n\nExamples:\n- '{@link overview Overview of hsDocs docSet}' -> {@link overview Overview of hsDocs docSet}\n- '{@link hsDocs: Overview of hsDocs docSet}' -> {@link hsDocs: Overview of hsDocs docSet}\n- '{@link hsDocs:DocSets.DocSets.add the `add` function}' --> {@link hsDocs:DocSets.DocSets.add the `add` function}\n- '{@link DocSets.DocSets.add the `add` function}' --> {@link DocSets.DocSets.add the `add` function}\n\n\n### Mithril Code Examples\n`hsDocs` supports creating inline code examples in comment sections as explained\nin the {@link hsDocs:MainExample MainExample overview}.\n<example>\n<file name=\"script.js\">\nlet tl = [10, 10];\n\nconst rnd = () => Math.floor(80*Math.random());\n\nfunction click() { tl = tl.map(i => rnd()); }\n\nm.mount(root, {\n    view: () => m('.myBlock', {\n        onclick:click,\n        style:`top:${tl[0]}%; left:${tl[1]}%;`\n    }, m('', 'click me'))})\n</file>\n<file name=\"style.css\">\n.myBlock {\n    text-align:center;\n    color: white;\n    background-color: red;\n    position:relative;\n    width:  20%;\n    height: 30%;\n}\n.myBlock div {\n    padding-top: 40%;\n}\n</file>\n</example>\n\n## Configuring typedoc\nAs an example, we use grunt-typedoc with the following configuration:\n\n### tsconfig.json:\nA `tsconfig.json` file seems to be required by typedoc. The file can be empty\n\n### Gruntfile:\n<code>module.exports = function(grunt) {\n...\ntypedoc: {\ncode: {\noptions: {\ntsconfig: 'typedoc.json',\njson:   './docs/hsDocs.json',\nout:    './docs',\nmode:   'modules',\nname:   'hsDocs'\n}\nsrc: ['src/*.ts', '!src/*.spec.ts']\n}\n},\n\n...\ngrunt.loadNpmTasks('grunt-typedoc');\n...\ngrunt.registerTask('doc', ['typedoc']);\n}\n</code>\n\n## Setting up the web app\n1. Create an **`index.html`** in the directory to serve from (web-app directory):\n<code>\n<html>\n<head><link href=\"styles.css\" rel=\"stylesheet\" /></head>\n<body class='hs-layout-fill'><script src=\"./hsDocs.js\"></script></body>\n</html>\n</code>\n\n2. Copy **`hsDocs.js`** and **`styles.css`** into the same directory\n\n3. Create a subdirectory **`data`** and copy the docsets into it, including **`hsDocs.json`**\n\n4. Create a list of docsets to render in a new file **`index.json`** inside **`data`**:\n<code>\n{\n\"docs\": [\n\"hsDocs.json\",\n...\n],\n\"title\": \"HS Libraries\"   // will be displayed at the top left corner\n}</code>\n\n5. Point a browser to the web-app directory\n\n## Dependencies\n### For creating the docsets:\n- [typedoc](http://typedoc.org)\n\n### For rendering the docsets:\n- [Mithril](https://mithril.js.org)\n- [showdown](https://github.com/showdownjs/showdown)\n- [hsLayout]\n- [webpack]\n\n## Structural Code Overview\nThe main entry point for the web-app is index.ts, which initiates loading the docsets\nand sets up a mithril {@link hsDocs:Router router}\n\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 36,
			"name": "\"view/DocsMenu\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/DocsMenu.ts",
			"children": [
				{
					"id": 37,
					"name": "DocsMenu",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates the title menu for selecting between the different docsets.\nInstantiate the DocsMenu via a standard `mithril` call:```\n   m(DocsMenu, { docSet:<pathToIndexFile>})\n```\nDocsMenu performs the following actions:\n- for the first call of the view lifecycle hook, the available docSets are loaded.\n  DocsMenu searches for an index `json` file at the location specified in the\n  `docSet` field of the `node.attrs` parameter. If none is specified, the\n  default is used as specified in the {@link hsDocs:DocSets.FILE DocSets FILE} setting.\n- DocsMenu retrieves all available docSets via {@link hsDocs:DocSets.DocSets.get DocSets.get}.\n- DocsMenu creates a `SelectorDesc` structure with a {@link hsWidget:hsSelector.SelectorDesc.changed `changed`} callback that initiates a route change\n  to the selected docSet"
					},
					"children": [
						{
							"id": 38,
							"name": "docSet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "view/DocsMenu.ts",
									"line": 20,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 45,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 3,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.style"
							}
						},
						{
							"id": 46,
							"name": "getCSS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 47,
									"name": "getCSS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 48,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.getCSS"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 5,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.getCSS"
							}
						},
						{
							"id": 42,
							"name": "getComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 43,
									"name": "getComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 44,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"name": "Layout.getComponents"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/DocsMenu.ts",
									"line": 35,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Layout.getComponents"
							}
						},
						{
							"id": 39,
							"name": "getDesc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 40,
									"name": "getDesc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 41,
											"name": "attrs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SelectorDesc"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/DocsMenu.ts",
									"line": 22,
									"character": 19
								}
							]
						},
						{
							"id": 49,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 50,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 51,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 7,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								38,
								45
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								46,
								42,
								39,
								49
							]
						}
					],
					"sources": [
						{
							"fileName": "view/DocsMenu.ts",
							"line": 19,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Layout"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						37
					]
				}
			],
			"sources": [
				{
					"fileName": "view/DocsMenu.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 105,
			"name": "\"view/LeftNav\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/LeftNav.ts",
			"comment": {
				"shortText": "LeftNav: Responsible for constructing the left-hand navigation pane."
			},
			"children": [
				{
					"id": 106,
					"name": "LeftNav",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constructs the left-hand navigation pane"
					},
					"children": [
						{
							"id": 110,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 3,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.style"
							}
						},
						{
							"id": 111,
							"name": "getCSS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 112,
									"name": "getCSS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 113,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.getCSS"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 5,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.getCSS"
							}
						},
						{
							"id": 107,
							"name": "getComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 108,
									"name": "getComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 109,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"name": "Layout.getComponents"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/LeftNav.ts",
									"line": 17,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Layout.getComponents"
							}
						},
						{
							"id": 114,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 116,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 7,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								110
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								111,
								107,
								114
							]
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 16,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Layout"
						}
					]
				},
				{
					"id": 124,
					"name": "entries",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 125,
							"name": "entries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "processes a group of entries, e.g. Variables, Functions, or Classes."
							},
							"parameters": [
								{
									"id": 126,
									"name": "group",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the group structure within the docset"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 127,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the entire module docset"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 128,
									"name": "field",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the field ID to be displayed on the main panel\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 107,
							"character": 16
						}
					]
				},
				{
					"id": 129,
					"name": "exportAscending",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 130,
							"name": "exportAscending",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sorting function: sort first by exported status, then alphabetically."
							},
							"parameters": [
								{
									"id": 131,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 132,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 145,
							"character": 24
						}
					]
				},
				{
					"id": 117,
					"name": "navList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 118,
							"name": "navList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the list if modules (`*.ts` files)"
							},
							"parameters": [
								{
									"id": 119,
									"name": "docSet",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 120,
									"name": "field",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Vnode"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 30,
							"character": 16
						}
					]
				},
				{
					"id": 121,
					"name": "ignoreModules",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "modules to ignore in the list"
					},
					"children": [
						{
							"id": 123,
							"name": "index",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/LeftNav.ts",
									"line": 96,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 122,
							"name": "overview",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/LeftNav.ts",
									"line": 95,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								123,
								122
							]
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 94,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						106
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						124,
						129,
						117
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						121
					]
				}
			],
			"sources": [
				{
					"fileName": "view/LeftNav.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 199,
			"name": "\"view/MainComment\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/MainComment.ts",
			"comment": {
				"shortText": "Processing of comments."
			},
			"children": [
				{
					"id": 203,
					"name": "comment",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 204,
							"name": "comment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Shortended comment processing. This form is used to report on subitems below the main panel item.\nIf `short` is true, only the first paragraph of the main comment will be returned. Otherwise,\nthis function creates a full comment including an inline list of parameters and the return value",
								"returns": "a vnode representing the comment entries\n"
							},
							"parameters": [
								{
									"id": 205,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to scan for comments"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 206,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "if true, only the first paragraph of the main comment is processed."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 35,
							"character": 23
						}
					]
				},
				{
					"id": 200,
					"name": "commentLong",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 201,
							"name": "commentLong",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Main comment processing. The result appears directly below the title in the main panel.\nFunction parameters are not reported in short form here since it is assumed they will be listed\nindividually below the main comment",
								"returns": "a vnode representing the comment entries\n"
							},
							"parameters": [
								{
									"id": 202,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to scan for comments"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 17,
							"character": 27
						}
					]
				},
				{
					"id": 215,
					"name": "commentRemainder",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 216,
							"name": "commentRemainder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 217,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Vnode"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 81,
							"character": 25
						}
					]
				},
				{
					"id": 221,
					"name": "mainCommentParams",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 222,
							"name": "mainCommentParams",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 223,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 110,
							"character": 26
						}
					]
				},
				{
					"id": 218,
					"name": "otherCommentTags",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 219,
							"name": "otherCommentTags",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 220,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Vnode"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 98,
							"character": 25
						}
					]
				},
				{
					"id": 224,
					"name": "prettifyCode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 225,
							"name": "prettifyCode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "finds segments of `<code>...</code>` in `comment` and replaces them with a prettified version.\nCurrently the function performs operations in this sequence:\n- add indentation for brackets {...}\n- wrap the &lt;code&gt;...&lt;/code&gt; part within &lt;pre&gt;...&lt;/pre&gt; brackets\n- apply markdown syntax\n- wrap results in a trusted mithril node"
							},
							"parameters": [
								{
									"id": 226,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment comment"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 227,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "only return the first paragraph\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 131,
							"character": 21
						}
					]
				},
				{
					"id": 211,
					"name": "returns",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 212,
							"name": "returns",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the `returns` message for a function or method."
							},
							"parameters": [
								{
									"id": 213,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 214,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 73,
							"character": 16
						}
					]
				},
				{
					"id": 207,
					"name": "textOrShortTextOrDescription",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 208,
							"name": "textOrShortTextOrDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Report the item's description. This can come in different forms that are all handled here:\n- comment.shortText: <description>\n- comment.text: <description>\n- comment.tags[{tag:'description}, text:<description>]\nAny resulting comment will be translated from markdown to html and returned as a `Vnode`."
							},
							"parameters": [
								{
									"id": 209,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment object to parse"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 210,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "boolean; if true, only the first paragraph of the description will be returned\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 60,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						203,
						200,
						215,
						221,
						218,
						224,
						211,
						207
					]
				}
			],
			"sources": [
				{
					"fileName": "view/MainComment.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 228,
			"name": "\"view/MainDetail\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/MainDetail.ts",
			"children": [
				{
					"id": 229,
					"name": "MainDetail",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates Documentation on the main panel"
					},
					"children": [
						{
							"id": 233,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 3,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.style"
							}
						},
						{
							"id": 234,
							"name": "getCSS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 235,
									"name": "getCSS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 236,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.getCSS"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 5,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.getCSS"
							}
						},
						{
							"id": 230,
							"name": "getComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 231,
									"name": "getComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 232,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"name": "Layout.getComponents"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/MainDetail.ts",
									"line": 16,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Layout.getComponents"
							}
						},
						{
							"id": 237,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 238,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 239,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 7,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								233
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								234,
								230,
								237
							]
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 15,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Layout"
						}
					]
				},
				{
					"id": 240,
					"name": "getOverview",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 241,
							"name": "getOverview",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if the project overview is being requested and returns the overview,\nor `undefined` if not available",
								"returns": "Vnode containing the overview file, or `undefined`\n"
							},
							"parameters": [
								{
									"id": 242,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 243,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module name to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 35,
							"character": 20
						}
					]
				},
				{
					"id": 272,
					"name": "itemChild",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 273,
							"name": "itemChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 274,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 275,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "mdl"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Vnode"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 158,
							"character": 18
						}
					]
				},
				{
					"id": 268,
					"name": "itemDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 269,
							"name": "itemDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 270,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 271,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 143,
							"character": 23
						}
					]
				},
				{
					"id": 244,
					"name": "itemDoc",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 245,
							"name": "itemDoc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates documentation for standard items in the main panel"
							},
							"parameters": [
								{
									"id": 246,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to document on the main panel\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 49,
							"character": 16
						}
					]
				},
				{
					"id": 262,
					"name": "member",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 263,
							"name": "member",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 264,
									"name": "group",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 265,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 266,
									"name": "statc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 267,
									"name": "publc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 99,
							"character": 15
						}
					]
				},
				{
					"id": 254,
					"name": "members",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 255,
							"name": "members",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 256,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 257,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 78,
							"character": 16
						}
					]
				},
				{
					"id": 247,
					"name": "overviewDoc",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 248,
							"name": "overviewDoc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates documentation for the project overview in the main panel"
							},
							"parameters": [
								{
									"id": 249,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to document on the main panel\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 62,
							"character": 20
						}
					]
				},
				{
					"id": 258,
					"name": "parameter",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 259,
							"name": "parameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 260,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 261,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 93,
							"character": 18
						}
					]
				},
				{
					"id": 250,
					"name": "title",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 251,
							"name": "title",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "renders the title of the main panel"
							},
							"parameters": [
								{
									"id": 252,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to document"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 253,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a signature of the module, or the the module itself\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 74,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						229
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						240,
						272,
						268,
						244,
						262,
						254,
						247,
						258,
						250
					]
				}
			],
			"sources": [
				{
					"fileName": "view/MainDetail.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 144,
			"name": "\"view/MainExample\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/MainExample.ts",
			"comment": {
				"shortText": "Comment sections may contain code examples that are placed within &lt;example&gt; tags.",
				"text": "`hsDocs` will interpret and execute Javascript instructions within a &lt;`file name='script.js'`&gt; tag.\nand stylesheet instructions with a &lt;`file name='style.css'`&gt; tag, as in following example:\n<code>\n    &lt;example&gt;\n    <file name='script.js'>\n    m.mount(root, {\n        view:() => m(hslayout.Layout, { columns:[],\n            content:['first line','second line')]\n        })\n    });\n    </file>\n\n    <file name='style.css'>\n    .hsLeaf {\n        color: blue;\n    }\n    </file>\n    &lt;/example&gt;\n</code>\n\n### Scripts\nScripts are expected to mount a `mithril Vnode` on a root DOM element using `m.mount` or `m.render`.\nDo not use `m.route` as only a single call is allowed per web app and that is used to manage the\nmain hsDocs site menu and navigation.\n\nhsDocs internally uses the [global `Function` object][Function] to parse and execute the script.\nThus the script has access only to global objects and to objects provided\nas parameters in the `Function` constructor. hsDocs currently provides the following namespaces as parameters\nfor use in the scripts:\n- **m**: the `Mithril` m function\n- **layout**: the {@link hsLayout: `hsLayout`} namespace, providing functions to layout the browser window.\n- **widget**: the {@link hsGraph: `hsGraph`} namespace, providing various UI widget functions.\n- additionally, the parameter **root** is provided as the DOM element to mount to.\n\n[Function]:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\n\n### Styles\nStyles will be automatically sandboxed so they are valid only within the enclosing example tags.\nThis is achieved by prefixing css tags with a unique exmple ID and allows multiple examples to co-exist on the same page.\nIn the DOM, the example ID is assgned top the &lt;example&gt; tag.\nUse `$exampleID` as css tag in the `css` section of the example to refer to the &lt;example&gt; element,\nas shown below.\n\n### Example\n<example>\n<file name='script.js'>\nm.mount(root, {\n    view:() => m(hslayout.Layout, {\n        css:'.myExample',\n        columns:[],\n        content:[\n            'third line',\n            'fourth line'\n        ]\n    })\n});\n</file>\n<file name='style.css'>\n$exampleID { height: 200px;}\n.hs-layout {\n    margin:0;\n}\n.myExample {\n    color: red;\n    font-weight:bold;\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 145,
					"name": "CommentDescriptor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "describes an executable comment example"
					},
					"children": [
						{
							"id": 160,
							"name": "activeSrcPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 104,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 149,
							"name": "attrs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 100,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 150,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 151,
											"name": "string",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "view/MainExample.ts",
													"line": 100,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												151
											]
										}
									],
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 100,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 148,
							"name": "desc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 99,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SelectorDesc"
							}
						},
						{
							"id": 146,
							"name": "exampleID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 155,
							"name": "executeScript",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 102,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 156,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 157,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 158,
													"name": "root",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 102,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 159,
							"name": "executeSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 103,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": ""
							}
						},
						{
							"id": 147,
							"name": "menuID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 98,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 152,
							"name": "pages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 101,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 153,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 154,
											"name": "string",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "view/MainExample.ts",
													"line": 101,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												154
											]
										}
									],
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 101,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								160,
								149,
								148,
								146,
								155,
								159,
								147,
								152
							]
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 96,
							"character": 27
						}
					]
				},
				{
					"id": 168,
					"name": "gInitialized",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Map containing various exampkle configurations"
					},
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 110,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 169,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 170,
									"name": "string",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 110,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										170
									]
								}
							],
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 110,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 183,
					"name": "addExample",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 184,
							"name": "addExample",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "asynchronously adds the example structure on the page and then executed the script."
							},
							"parameters": [
								{
									"id": 185,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 195,
							"character": 19
						}
					]
				},
				{
					"id": 186,
					"name": "addExampleStructure",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 187,
							"name": "addExampleStructure",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "returns a parameterless function that can be called via setTimeout to\nmount the menu and execute the script function provided in `IDs`."
							},
							"parameters": [
								{
									"id": 188,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the `CommentDescriptor` to execute on.\n"
									},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CommentDescriptor",
								"id": 145
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 204,
							"character": 28
						}
					]
				},
				{
					"id": 174,
					"name": "createExecuteScript",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 175,
							"name": "createExecuteScript",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 176,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								},
								{
									"id": 177,
									"name": "exmpl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 153,
							"character": 28
						}
					]
				},
				{
					"id": 171,
					"name": "example",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 172,
							"name": "example",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the example configuration, generates the DOM hook, and sets up the example execution.\n`example` takes a context map of the form `{ name:module, ...}` containing libraries to be used\nwithibn the example, and returns a function that can be used in calls to `string.replace`.\nSee the following example:\n<code><pre>\nimport * as layout from \"layout\";\ntext = text.replace(/<example>([\\S\\s]*?)<\\/example>/gi, example({layout:layout}));\n</pre></code>\nThe modules `m`, `hsLayout`, and `hsGraph` will be added by default as\n` { m: m, layout: layout, widget: widget } `"
							},
							"parameters": [
								{
									"id": 173,
									"name": "exmpl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the example string extracted from the comment, including the `<example>` tags."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 126,
							"character": 23
						}
					]
				},
				{
					"id": 192,
					"name": "executeError",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 193,
							"name": "executeError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 194,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 252,
							"character": 21
						}
					]
				},
				{
					"id": 189,
					"name": "executeScript",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 190,
							"name": "executeScript",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "execute the provided script"
							},
							"parameters": [
								{
									"id": 191,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "provides the context in which the script is exceuted/\n"
									},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CommentDescriptor",
								"id": 145
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 235,
							"character": 22
						}
					]
				},
				{
					"id": 195,
					"name": "getCommentDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 196,
							"name": "getCommentDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fills in all fields of the CommentDescriptor provided as `IDs`.",
								"returns": "the script to execute, as a string\n"
							},
							"parameters": [
								{
									"id": 197,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the CommentDescriptor to complete"
									},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								},
								{
									"id": 198,
									"name": "example",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the example string, including <example> tag"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 263,
							"character": 29
						}
					]
				},
				{
					"id": 181,
					"name": "getNewID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 182,
							"name": "getNewID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates a new random example ID for each call."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 190,
							"character": 17
						}
					]
				},
				{
					"id": 178,
					"name": "initDesc",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 179,
							"name": "initDesc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the example configuration"
							},
							"parameters": [
								{
									"id": 180,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 145
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CommentDescriptor",
								"id": 145
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 172,
							"character": 17
						}
					]
				},
				{
					"id": 161,
					"name": "modules",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 166,
							"name": "hsdatab",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 89,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hsdatab/index\""
									}
								]
							},
							"defaultValue": "    import(/* webpackChunkName: \"hsdatab\" */  'hsdatab')"
						},
						{
							"id": 167,
							"name": "hsgraph",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 90,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hsgraph/index\""
									}
								]
							},
							"defaultValue": "    import(/* webpackChunkName: \"hsgraph\" */  'hsgraph')"
						},
						{
							"id": 164,
							"name": "hslayout",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 87,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/index\""
									}
								]
							},
							"defaultValue": "   Promise.resolve(hslayout)"
						},
						{
							"id": 163,
							"name": "hsutil",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 86,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hsutil/index\""
									}
								]
							},
							"defaultValue": "     Promise.resolve(hsutil)"
						},
						{
							"id": 165,
							"name": "hswidget",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 88,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hswidget/index\""
									}
								]
							},
							"defaultValue": "   Promise.resolve(hswidget)"
						},
						{
							"id": 162,
							"name": "m",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 85,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": "          Promise.resolve(m)"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								166,
								167,
								164,
								163,
								165,
								162
							]
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 84,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						145
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						168
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						183,
						186,
						174,
						171,
						192,
						189,
						195,
						181,
						178
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						161
					]
				}
			],
			"sources": [
				{
					"fileName": "view/MainExample.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 58,
			"name": "\"view/Parts\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/Parts.ts",
			"children": [
				{
					"id": 59,
					"name": "SourceBase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 5,
							"character": 16
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "src/"
					},
					"defaultValue": "\"src/\""
				},
				{
					"id": 93,
					"name": "defaultVal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 94,
							"name": "defaultVal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "adds a default value, if defined"
							},
							"parameters": [
								{
									"id": 95,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 96,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 138,
							"character": 26
						}
					]
				},
				{
					"id": 74,
					"name": "extensionOf",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 75,
							"name": "extensionOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 76,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 48,
							"character": 27
						}
					]
				},
				{
					"id": 60,
					"name": "flags",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 61,
							"name": "flags",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 62,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 63,
									"name": "ignore",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 9,
							"character": 21
						}
					]
				},
				{
					"id": 77,
					"name": "inheritedFrom",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 78,
							"name": "inheritedFrom",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 79,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 60,
							"character": 29
						}
					]
				},
				{
					"id": 67,
					"name": "itemName",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 68,
							"name": "itemName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 69,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 70,
									"name": "sub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 39,
							"character": 24
						}
					]
				},
				{
					"id": 71,
					"name": "itemTooltip",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 72,
							"name": "itemTooltip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 73,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 44,
							"character": 27
						}
					]
				},
				{
					"id": 64,
					"name": "kindString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 65,
							"name": "kindString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 66,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 35,
							"character": 26
						}
					]
				},
				{
					"id": 83,
					"name": "libLink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 84,
							"name": "libLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates a library link on the specified `name`.\nThe link points to `/api/<lib>/<id>`"
							},
							"parameters": [
								{
									"id": 85,
									"name": "css",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the css tag selector to use"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 86,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the lib string to point to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 87,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the id number to point to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 88,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name on which to formt he link\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 98,
							"character": 23
						}
					]
				},
				{
					"id": 101,
					"name": "makeID",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 102,
							"name": "makeID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 103,
									"name": "section",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 104,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 199,
							"character": 22
						}
					]
				},
				{
					"id": 89,
					"name": "signature",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 90,
							"name": "signature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates a function or method signature"
							},
							"parameters": [
								{
									"id": 91,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 92,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 105,
							"character": 25
						}
					]
				},
				{
					"id": 80,
					"name": "sourceLink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 81,
							"name": "sourceLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 82,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 73,
							"character": 26
						}
					]
				},
				{
					"id": 97,
					"name": "type",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 98,
							"name": "type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 99,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 100,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 147,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						59
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						93,
						74,
						60,
						77,
						67,
						71,
						64,
						83,
						101,
						89,
						80,
						97
					]
				}
			],
			"sources": [
				{
					"fileName": "view/Parts.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 52,
			"name": "\"view/Tooltip\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/Tooltip.ts",
			"children": [
				{
					"id": 53,
					"name": "tooltip",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 54,
							"name": "tooltip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 55,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56,
									"name": "tip",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Tooltip.ts",
							"line": 3,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						53
					]
				}
			],
			"sources": [
				{
					"fileName": "view/Tooltip.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				276,
				319,
				133,
				320,
				36,
				105,
				199,
				228,
				144,
				58,
				52
			]
		}
	]
}