{
	"id": 0,
	"name": "hsGraph",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1466,
			"name": "\"Axes\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Axes.ts",
			"comment": {
				"shortText": "# Axes\nrenders the x- and y-axis with title, tick marks and labels.",
				"text": "### Attributes\nThe `Axes` class is called by {@link Graph.Graph `Graph`} as\n`m(Axes, { cfg:cfg.axes, scales:scales })`\nwith the following attributes:\n- cfg: a {@link Axes.AxesConfig AxesConfig} object\n- scales: a {@link Axes.Scales Scales } object\n\n### Configurations and Defaults\nSee {@link Axes.Axes.defaultConfig Axes.defaultConfig}\n\n### Example\n<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume', 'price'],\n   rows:[\n     [0.2, 0.7, 0.87],\n     [0.4, 0.015, 0.7],\n     [0.6, 0.01, 0.7],\n     [0.7, 5, 0.6],\n     [0.8, 10, 0.75]\n]};\n\nfunction myConfig(cfg) {\n     cfg.series.data   = [series];\n     cfg.series.series = [\n         { x:'time', y:'volume'},\n         { x:'time', y:'price'}\n     ];\n     cfg.series.series[0].style.marker.visible = true;\n     cfg.series.series[1].style.marker.visible = true;\n     cfg.series.series[1].style.marker.shape = hsgraph.Series.marker.square;\n     cfg.chart.title.text          = 'Volume over Time';\n     cfg.chart.title.xpos          = 'end';\n     cfg.chart.title.ypos          = 'top';\n     cfg.chart.title.vOffset       = -1.5;\n     cfg.grid.minor.hor.visible    = true;\n\n     const axes = cfg.axes.primary;\n     axes.x.title.text = 'time';\n     axes.y.title.text = 'volume';\n     axes.y.scale.type = hsgraph.Axes.type.log;\n}\n\nm.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: myConfig })\n});\n\n</file>\n<file name='style.css'>\n.hs-graph-chart { fill: #fff; }\n.hs-graph-series { stroke-width: 5; }\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 1467,
					"name": "Axes",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1529,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1530,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 1531,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1532,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1533,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1534,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 1535,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1536,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 1537,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1538,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1539,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 1510,
							"name": "drawAxis",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1511,
									"name": "drawAxis",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "draws a single axis"
									},
									"parameters": [
										{
											"id": 1512,
											"name": "dir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "axis to draw: 'x' or 'y'"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1513,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1514,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1515,
											"name": "axisCfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AxesConfig",
												"id": 1451
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 320,
									"character": 12
								}
							]
						},
						{
							"id": 1482,
							"name": "drawAxisLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1483,
									"name": "drawAxisLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "draws the axis line"
									},
									"parameters": [
										{
											"id": 1484,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1485,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1486,
											"name": "cross",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 271,
									"character": 16
								}
							]
						},
						{
							"id": 1502,
							"name": "drawTickLabels",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1503,
									"name": "drawTickLabels",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "draws the tick labels. Labels are plotted for major tick marks only."
									},
									"parameters": [
										{
											"id": 1504,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1505,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1506,
											"name": "crossesAt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1507,
											"name": "scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scale",
												"id": 2
											}
										},
										{
											"id": 1508,
											"name": "ticks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TickDefs",
												"id": 1438
											}
										},
										{
											"id": 1509,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TickStruct",
												"id": 1444
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 301,
									"character": 18
								}
							]
						},
						{
							"id": 1494,
							"name": "drawTickMarks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1495,
									"name": "drawTickMarks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "draws the tick marks. Labels are plotted for major tick marks only."
									},
									"parameters": [
										{
											"id": 1496,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1497,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1498,
											"name": "crossesAt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1499,
											"name": "scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scale",
												"id": 2
											}
										},
										{
											"id": 1500,
											"name": "ticks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TickDefs",
												"id": 1438
											}
										},
										{
											"id": 1501,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TickStruct",
												"id": 1444
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 289,
									"character": 17
								}
							]
						},
						{
							"id": 1487,
							"name": "drawTitle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1488,
									"name": "drawTitle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "draws the axis title"
									},
									"parameters": [
										{
											"id": 1489,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1490,
											"name": "ttlCfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LabelCfg",
												"id": 1260
											}
										},
										{
											"id": 1491,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1492,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1493,
											"name": "cross",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 279,
									"character": 13
								}
							]
						},
						{
							"id": 1547,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1548,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 1549,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1550,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1551,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1552,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 1540,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1541,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 1542,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1543,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1544,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1545,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1546,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 1568,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1569,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1570,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1571,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1572,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1573,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1574,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1575,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1576,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1577,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1578,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 1559,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1560,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1561,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1562,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1563,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1564,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1565,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1566,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1567,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 1523,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1524,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 1525,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1526,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1527,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1528,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 1579,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1580,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1581,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1582,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1583,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1584,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 1519,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1520,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 1521,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 1522,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 1553,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1554,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 1555,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1556,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1557,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1558,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						},
						{
							"id": 1516,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1517,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1518,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1589
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1589
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 337,
									"character": 8
								}
							]
						},
						{
							"id": 1479,
							"name": "adjustConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1480,
									"name": "adjustConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Makes adjustments to cfg based on current settings"
									},
									"parameters": [
										{
											"id": 1481,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all components\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 265,
									"character": 23
								}
							]
						},
						{
							"id": 1476,
							"name": "defaultConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1477,
									"name": "defaultConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Defines default values for display elements in `Axes`\nsets the default configuration for the primary and secondary axes.\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for the sequence of initializations.",
										"text": "### Configurations and Defaults\n```\ncfg.axes = {@link AxesTypes.AxesConfig <AxesConfig>} {\n   primary: {                // Primary axis:\n      x: axisCfg(true, true),\n      y: axisCfg(true, false)\n   },\n   secondary: {               // Secondary axis:\n      x: axisCfg(false, true),\n      y: axisCfg(false, false)\n   }\n }\n```\n#### axisCfg(primary:boolean, x:boolean):\n```\n cfg.axes.[primary|secondary].[x|y] = {@link AxesTypes.AxisCfg <AxisCfg>}{\n    visible:    primary? true : false,   // hide secondary axes\n    crossesAt:  primary? 'min':'max',    // default axis crossing\n    scale:     {@link AxesTypes.ScaleCfg <ScaleCfg>}scaleCfg(),     // scale type and domain\n    title:     {@link Graph.LabelCfg <LabelCfg>}titleCfg(primary, x),\n    ticks:     {@link AxesTypes.TicksCfg <TicksCfg>}{\n        major: {@link AxesTypes.TickStruct <TickStruct>}{\n            marks:  {@link AxesTypes.MarkCfg <MarkCfg>}markCfg(primary, true),\n            labels: {@link Graph.LabelCfg <LabelCfg>}labelCfg(primary, x, true),\n            labelFmt: <string>undefined\n        },\n        minor: {@link AxesTypes.TickStruct <TickStruct>}{\n            marks:  markCfg(primary, false),\n            labels: labelCfg(primary, x, false),\n            labelFmt: undefined\n        }\n    }\n }\n```\n#### scaleCfg():\n```\n cfg.axes.[primary|secondary].[x|y].scale = {@link AxesTypes.ScaleCfg <ScaleCfg>}{\n     type:   {@link Axes.Axes.type <Axes.type>} Axes.type.linear,\n     domain: {@link Data.Domain <Domain>}['auto', 'auto']    // : min/max of domain; 'auto', 'tight', or a domain value\n }\n```\n#### titleCfg(primary:boolean, x:boolean):\n```\n cfg.axes.[primary|secondary].[x|y].title = {@link SVGElem.TextElem <SVGElem.TextElem>}{\n    visible: true,\n    text:    (x? 'x' : 'y') + (primary? '' : '2'),    // 'x' / 'y' or 'x2' / 'y2'\n    xpos:    x? 'end' : (primary? 'middle' : 'start'),\n    ypos:    x? 'top' : (primary? 'bottom' : 'top'),\n    hOffset: x? -2 : (primary? 0 : 0.3),\n    vOffset: x? (primary? 0.4 : -1.2) : (primary? -0.5 : 0.7)\n }\n```\n#### markCfg(primary:boolean, major:boolean):\n```\n cfg.axes.[primary|secondary].[x|y].ticks.[major|minor].marks = {@link AxesTypes.MarkCfg <Axes.MarkCfg>}{\n    visible: major,\n    length: (primary? 1 : -1) * (major? 10 : 5)\n }\n```\n#### labelCfg(primary:boolean, x:boolean, major:boolean):\n```\n cfg.axes.[primary|secondary].[x|y].ticks.[major|minor].labels = {@link SVGElem.TextElem <SVGElem.TextElem>}{\n    visible: major,\n    xpos: x? 'middle' : (primary? 'end' : 'start')\n    ypos: x? (primary? 'top' : 'bottom') : 'center',\n    hOffset: x? 0 (primary? -0.7 : 0.7),\n    vOffset: x? (primary? 0.7 : -0.7) : 0\n }\n```"
									},
									"parameters": [
										{
											"id": 1478,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all\npreviously configured components.\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 198,
									"character": 24
								}
							]
						},
						{
							"id": 1468,
							"name": "type",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Defines available axis types:\n- linear\n- log\n- date\n- index\n- percent\n- ordinal\n- nominal"
							},
							"children": [
								{
									"id": 1471,
									"name": "date",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Axes.ts",
											"line": 114,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"date axis\""
								},
								{
									"id": 1472,
									"name": "index",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Axes.ts",
											"line": 115,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"index axis\""
								},
								{
									"id": 1469,
									"name": "linear",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Axes.ts",
											"line": 112,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"linear axis\""
								},
								{
									"id": 1470,
									"name": "log",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Axes.ts",
											"line": 113,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"log axis\""
								},
								{
									"id": 1475,
									"name": "nominal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Axes.ts",
											"line": 118,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"nominal axis\""
								},
								{
									"id": 1474,
									"name": "ordinal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Axes.ts",
											"line": 117,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"ordinal axis\""
								},
								{
									"id": 1473,
									"name": "percent",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Axes.ts",
											"line": 116,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"percent axis\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1471,
										1472,
										1469,
										1470,
										1475,
										1474,
										1473
									]
								}
							],
							"sources": [
								{
									"fileName": "Axes.ts",
									"line": 111,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1529,
								1535,
								1510,
								1482,
								1502,
								1494,
								1487,
								1547,
								1540,
								1568,
								1559,
								1523,
								1579,
								1519,
								1553,
								1516,
								1479,
								1476
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1468
							]
						}
					],
					"sources": [
						{
							"fileName": "Axes.ts",
							"line": 100,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SVGElem",
							"id": 110
						}
					]
				},
				{
					"id": 1587,
					"name": "ExampleDateAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "### Date Axis\n<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume'],\n   rows:[['2/6/17', 0.2], ['3/18/17', 0.7], ['5/1/17', 8], ['11/20/17', 10], ['1/15/18', 0.5]]\n};",
						"text": "m.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: cfg => {\n         cfg.chart.title.text = 'Date X Axis';\n         cfg.series.data   = [series];\n         cfg.series.series = [{ x:'time', y:'volume' }];\n         cfg.axes.primary.x.scale.type = hsgraph.Axes.type.date;\n         cfg.axes.primary.x.ticks.major.labelFmt = '%MMM %YY';\n     }})\n});\n\n</file>\n<file name='style.css'>\n.hs-graph-series { stroke-width: 5; }\n</file>\n</example>\n"
					},
					"sources": [
						{
							"fileName": "Axes.ts",
							"line": 434,
							"character": 21
						}
					]
				},
				{
					"id": 1585,
					"name": "ExampleLinearAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "### Simple Example\n<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume'],\n   rows:[\n     [-1, 0.2],\n     [0.2, 0.7],\n     [0.4, -0.2],\n     [0.6, 0],\n     [0.8, 0.5],\n     [1, 0.7]\n]};",
						"text": "m.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: cfg => {\n         cfg.chart.title.text          = 'Simple Example';\n         cfg.series.data   = [series];\n         cfg.series.series = [{ x:'time', y:'volume' }];\n     }})\n});\n\n</file>\n<file name='style.css'>\n.hs-graph-chart { fill: #fff; }\n.hs-graph-series { stroke-width: 5; }\n</file>\n</example>\n"
					},
					"sources": [
						{
							"fileName": "Axes.ts",
							"line": 379,
							"character": 23
						}
					]
				},
				{
					"id": 1586,
					"name": "ExampleLogAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "### Logarithmic Axis\n<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume'],\n   rows:[[0.3, 0.2], [0.32, 0.7], [0.4, 8], [0.56, 10], [0.7, 0.5], [0.8, 15]]\n};",
						"text": "m.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: cfg => {\n         cfg.chart.title.text = 'Log Y Axis';\n         cfg.series.data   = [series];\n         cfg.series.series = [{ x'time', y:'volume' }];\n         cfg.axes.primary.x.scale.type = hsgraph.Axes.type.log;\n         cfg.axes.primary.x.scale.domain = ['tight', 'tight'];\n         cfg.axes.primary.y.scale.type = hsgraph.Axes.type.log;\n         cfg.axes.primary.y.scale.domain = ['auto', 'auto'];\n         cfg.grid.minor.hor.visible = true;\n         cfg.grid.minor.ver.visible = true;\n     }})\n});\n\n</file>\n</example>\n"
					},
					"sources": [
						{
							"fileName": "Axes.ts",
							"line": 407,
							"character": 20
						}
					]
				},
				{
					"id": 1589,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Axes.ts",
							"line": 63,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1588,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Axes.ts",
							"line": 62,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				},
				{
					"id": 1590,
					"name": "getCrossAt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1591,
							"name": "getCrossAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "calculates the range value of axis crossing from a domain value."
							},
							"parameters": [
								{
									"id": 1592,
									"name": "cross",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the domain value where the axis crosses. Either 'min', 'max', or a numeric domain value"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1593,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the Scale object for the perpendicular axis.\n"
									},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 2
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "Axes.ts",
							"line": 90,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1467,
						1587,
						1585,
						1586
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1589
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1588
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1590
					]
				}
			],
			"sources": [
				{
					"fileName": "Axes.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1422,
			"name": "\"AxesTypes\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/AxesTypes.ts",
			"comment": {
				"tags": [
					{
						"tag": "module",
						"text": "Axes\n"
					}
				]
			},
			"children": [
				{
					"id": 1451,
					"name": "AxesConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings."
					},
					"children": [
						{
							"id": 1452,
							"name": "primary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 75,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1453,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1454,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AxesTypes.ts",
													"line": 75,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisCfg",
												"id": 1460
											}
										},
										{
											"id": 1455,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AxesTypes.ts",
													"line": 75,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisCfg",
												"id": 1460
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1454,
												1455
											]
										}
									],
									"sources": [
										{
											"fileName": "AxesTypes.ts",
											"line": 75,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 1456,
							"name": "secondary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1457,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1458,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AxesTypes.ts",
													"line": 76,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisCfg",
												"id": 1460
											}
										},
										{
											"id": 1459,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AxesTypes.ts",
													"line": 76,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisCfg",
												"id": 1460
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1458,
												1459
											]
										}
									],
									"sources": [
										{
											"fileName": "AxesTypes.ts",
											"line": 76,
											"character": 14
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1452,
								1456
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 74,
							"character": 27
						}
					]
				},
				{
					"id": 1460,
					"name": "AxisCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings per axis"
					},
					"children": [
						{
							"id": 1462,
							"name": "crossesAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "axis crossing in domain: 'min', 'max', or domain value"
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 85,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1463,
							"name": "scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "axis type"
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 88,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleCfg",
								"id": 1429
							}
						},
						{
							"id": 1464,
							"name": "ticks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "configures the major and minor ticks"
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 91,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TicksCfg",
								"id": 1448
							}
						},
						{
							"id": 1461,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "configures the axis title"
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 82,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "LabelCfg",
								"id": 1260
							}
						},
						{
							"id": 1465,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1462,
								1463,
								1464,
								1461,
								1465
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 80,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						}
					]
				},
				{
					"id": 1441,
					"name": "MarkCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings for tick marks"
					},
					"children": [
						{
							"id": 1442,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "length in viewBox coordinates"
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 57,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1443,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1442,
								1443
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 55,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						}
					]
				},
				{
					"id": 1429,
					"name": "ScaleCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Configures the scale type and domain boundaries `[min, max]` to be displayed."
					},
					"children": [
						{
							"id": 1431,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Configures the domain boundaries `[min, max]` to be displayed.\nFor ordinal values these are the numeric min and max values of the domain,\nor the special values\n- `auto`: determines the domain automatically from the data. Boundaries are set 'loosely'\n  so that the major tick mark below and above the data range are displayed as well.\n- `tight`: same as `auto`, except the domain covers exactly the values contained in data.\nBoth values can be set indepoendently for `min` and `max`"
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain"
							}
						},
						{
							"id": 1430,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "scale type: {@link Axes.Axes.type Axes.type}.`linear` | `log` | `date` | `index` | `percent` | `ordinal` | `nominal`"
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 25,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1431,
								1430
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 23,
							"character": 25
						}
					]
				},
				{
					"id": 1426,
					"name": "Scales",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Set of `Scales` for primary and secondary x- and y-axes."
					},
					"children": [
						{
							"id": 1427,
							"name": "primary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 16,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "XYScale",
								"id": 1423
							}
						},
						{
							"id": 1428,
							"name": "secondary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "XYScale",
								"id": 1423
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1427,
								1428
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 15,
							"character": 23
						}
					]
				},
				{
					"id": 1438,
					"name": "TickDefs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1440,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 51,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "TickLabel",
									"id": 1435
								}
							}
						},
						{
							"id": 1439,
							"name": "marks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 50,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1440,
								1439
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 49,
							"character": 25
						}
					]
				},
				{
					"id": 1435,
					"name": "TickLabel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1436,
							"name": "pos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 45,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1437,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 46,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1436,
								1437
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 44,
							"character": 26
						}
					]
				},
				{
					"id": 1444,
					"name": "TickStruct",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings for tick marks and labels per axis"
					},
					"children": [
						{
							"id": 1447,
							"name": "labelFmt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 64,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1446,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 63,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "LabelCfg",
								"id": 1260
							}
						},
						{
							"id": 1445,
							"name": "marks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "MarkCfg",
								"id": 1441
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1447,
								1446,
								1445
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 61,
							"character": 27
						}
					]
				},
				{
					"id": 1432,
					"name": "Ticks",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1433,
							"name": "major",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 40,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TickDefs",
								"id": 1438
							}
						},
						{
							"id": 1434,
							"name": "minor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TickDefs",
								"id": 1438
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1433,
								1434
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 39,
							"character": 22
						}
					]
				},
				{
					"id": 1448,
					"name": "TicksCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings for major and minor ticks (marks and labels)"
					},
					"children": [
						{
							"id": 1449,
							"name": "major",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 69,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TickStruct",
								"id": 1444
							}
						},
						{
							"id": 1450,
							"name": "minor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 70,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TickStruct",
								"id": 1444
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1449,
								1450
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 68,
							"character": 25
						}
					]
				},
				{
					"id": 1423,
					"name": "XYScale",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Set of `Scales` for x- and y-axis"
					},
					"children": [
						{
							"id": 1424,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 12,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 2
							}
						},
						{
							"id": 1425,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AxesTypes.ts",
									"line": 12,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 2
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1424,
								1425
							]
						}
					],
					"sources": [
						{
							"fileName": "AxesTypes.ts",
							"line": 12,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1451,
						1460,
						1441,
						1429,
						1426,
						1438,
						1435,
						1444,
						1432,
						1448,
						1423
					]
				}
			],
			"sources": [
				{
					"fileName": "AxesTypes.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 182,
			"name": "\"Canvas\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Canvas.ts",
			"comment": {
				"shortText": "# Canvas\nrenders the graph's background.",
				"text": "### Attributes\nThe `Canvas` class is called by {@link Graph.Graph `Graph`} as\n`m(Canvas, { cfg:cfg.canvas}))`\nwith the following attributes:\n- cfg: a {@link Canvas.CanvasConfig `CanvasConfig`} configuration object\n\n### Configurations and Defaults\nSee {@link Canvas.Canvas.defaultConfig Canvas.defaultConfig}\n"
			},
			"children": [
				{
					"id": 186,
					"name": "Canvas",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 206,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 207,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 208,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 209,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 210,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 211,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 212,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 213,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 214,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 215,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 216,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 224,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 225,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 226,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 227,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 228,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 229,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 217,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 218,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 219,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 220,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 221,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 222,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 223,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 245,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 246,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 247,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 248,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 249,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 250,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 251,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 252,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 253,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 254,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 255,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 236,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 237,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 238,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 239,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 240,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 241,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 242,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 243,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 244,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 200,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 201,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 202,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 203,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 204,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 205,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 256,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 257,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 258,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 259,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 261,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 196,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 197,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 198,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 199,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 230,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 231,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 232,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 233,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 234,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 235,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						},
						{
							"id": 193,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 194,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 195,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 263
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 263
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 62,
									"character": 8
								}
							]
						},
						{
							"id": 190,
							"name": "adjustConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 191,
									"name": "adjustConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Makes adjustments to cfg based on current settings"
									},
									"parameters": [
										{
											"id": 192,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all components\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 59,
									"character": 23
								}
							]
						},
						{
							"id": 187,
							"name": "defaultConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 188,
									"name": "defaultConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Defines default values for all configurable parameters in `Graph`.\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for the sequence of initializations.",
										"text": "### Configurations and Defaults\n```\n cfg.canvas = {@link Canvas.CanvasConfig <CanvasConfig>}{\n    range: {         // the graphs background rect:\n       w: 100,       //    width\n       h: 100,       //    height\n       wunit:'%',    //    unit for width\n       hunit:'%'     //    unit for height\n    }\n }\n```"
									},
									"parameters": [
										{
											"id": 189,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all\npreviously configured components.\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 46,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								206,
								212,
								224,
								217,
								245,
								236,
								200,
								256,
								196,
								230,
								193,
								190,
								187
							]
						}
					],
					"sources": [
						{
							"fileName": "Canvas.ts",
							"line": 27,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SVGElem",
							"id": 110
						}
					]
				},
				{
					"id": 183,
					"name": "CanvasConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings."
					},
					"children": [
						{
							"id": 184,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Canvas.ts",
									"line": 24,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Area",
								"id": 87
							}
						},
						{
							"id": 185,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								184,
								185
							]
						}
					],
					"sources": [
						{
							"fileName": "Canvas.ts",
							"line": 23,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						}
					]
				},
				{
					"id": 263,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Canvas.ts",
							"line": 17,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 262,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Canvas.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						186
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						183
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						263
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						262
					]
				}
			],
			"sources": [
				{
					"fileName": "Canvas.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1043,
			"name": "\"Chart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Chart.ts",
			"comment": {
				"shortText": "# Chart\nrenders the chart background and title.",
				"text": "### Attributes\nThe `Chart` class is called by {@link Graph.Graph `Graph`} as\n`m(Chart, { cfg:cfg.chart, plotArea:plotArea })`\nwith the following attributes:\n- cfg: a {@link Chart.ChartConfig ChartConfig} object\n- plotArea: a {@link SVGElem.Rect Rect } object for plotting the chart background\n\n### Configurations and Defaults\nSee {@link Chart.Chart.defaultConfig Chart.defaultConfig}\n"
			},
			"children": [
				{
					"id": 1047,
					"name": "Chart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders the chart background and title."
					},
					"children": [
						{
							"id": 1055,
							"name": "clientHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 79,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1054,
							"name": "clientWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 78,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1082,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1083,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 1084,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1085,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1086,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1087,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 1088,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1089,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 1090,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1091,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1092,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 1062,
							"name": "drawBackground",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1063,
									"name": "drawBackground",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1064,
											"name": "plotArea",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Rect",
												"id": 75
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 99,
									"character": 18
								}
							]
						},
						{
							"id": 1065,
							"name": "drawTitle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1066,
									"name": "drawTitle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1067,
											"name": "plotArea",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Rect",
												"id": 75
											}
										},
										{
											"id": 1068,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartConfig",
												"id": 1044
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 105,
									"character": 13
								}
							]
						},
						{
							"id": 1100,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1101,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 1102,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1103,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1104,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1105,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 1093,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1094,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 1095,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1096,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1097,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1098,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1099,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 1056,
							"name": "onupdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1057,
									"name": "onupdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1058,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1139
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 81,
									"character": 12
								}
							]
						},
						{
							"id": 1121,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1122,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1123,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1124,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1125,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1126,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1127,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1128,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1129,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1130,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1131,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 1112,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1113,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1114,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1115,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1116,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1117,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1118,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1119,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1120,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 1076,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1077,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 1078,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1079,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1080,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1081,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 1132,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1133,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1134,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1135,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1136,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1137,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 1072,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1073,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 1074,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 1075,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 1059,
							"name": "updateTitleSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1060,
									"name": "updateTitleSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1061,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1139
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 86,
									"character": 19
								}
							]
						},
						{
							"id": 1106,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1107,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 1108,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1109,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1110,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1111,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						},
						{
							"id": 1069,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1070,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1071,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1139
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1139
									}
								}
							],
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 122,
									"character": 8
								}
							]
						},
						{
							"id": 1051,
							"name": "adjustConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1052,
									"name": "adjustConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Makes adjustments to cfg based on current settings"
									},
									"parameters": [
										{
											"id": 1053,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all components\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 75,
									"character": 23
								}
							]
						},
						{
							"id": 1048,
							"name": "defaultConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1049,
									"name": "defaultConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Defines default values for display elements in `Chart`\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for the sequence of initializations.",
										"text": "### Configurations and Defaults\n```\n cfg.chart = {@link Chart.ChartConfig <ChartConfig>}{\n    visible: true,          // Chart area is visible\n    title:  {               // the chart title\n       visible: true,      // Chart title is visible\n       text:'',            // the sting to display\n       hOffset: 0,         // horizontal label offset in 'em'\n       vOffset: -1.5,      // vertical label offset in 'em'\n       xpos:'middle',      // hor. title position: 0-100%, rel. to Chart\n       ypos:'top'          // ver. title position: 0-100%, rel. to Chart\n    }\n }\n```"
									},
									"parameters": [
										{
											"id": 1050,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all\npreviously configured components.\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Config",
										"id": 1272
									}
								}
							],
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 56,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1055,
								1054
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1082,
								1088,
								1062,
								1065,
								1100,
								1093,
								1056,
								1121,
								1112,
								1076,
								1132,
								1072,
								1059,
								1106,
								1069,
								1051,
								1048
							]
						}
					],
					"sources": [
						{
							"fileName": "Chart.ts",
							"line": 34,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SVGElem",
							"id": 110
						}
					]
				},
				{
					"id": 1044,
					"name": "ChartConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings."
					},
					"children": [
						{
							"id": 1045,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the title text and positioning"
							},
							"sources": [
								{
									"fileName": "Chart.ts",
									"line": 28,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "LabelCfg",
								"id": 1260
							}
						},
						{
							"id": 1046,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1045,
								1046
							]
						}
					],
					"sources": [
						{
							"fileName": "Chart.ts",
							"line": 26,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						}
					]
				},
				{
					"id": 1139,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Chart.ts",
							"line": 18,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1138,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Chart.ts",
							"line": 17,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1047
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1044
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1139
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1138
					]
				}
			],
			"sources": [
				{
					"fileName": "Chart.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1257,
			"name": "\"Graph\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Graph.ts",
			"comment": {
				"shortText": "# Graph\nThe main `Graph` object that contains all graph components and sets up the controlling logic.\n`Graph` sets up a viewBox that is always 1000 units wide. the height automatically adjusts to fill available space while\npreserving a uniform scaling (i.e. preserveAspectRatio = default (xMidYMid)).",
				"text": "### Attributes\nThe main entry point for applications using this library is the `Graph` class,\ntypically called as `m(Graph, {cfgFn: (cfg:any) => {...});`\nAccepted attributes are:\n- cfgFn: a {@link Graph.CfgFn CfgFn} function that allows setting graph parameters.\n\n### Example\n<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume', 'price'],\n   rows:[\n         [-1,   0.2, 0.8],\n         [0.2,  0.7, 0.87],\n         [0.4, -0.2, 0.7],\n         [0.6,    0, 0.7],\n         [0.8,  0.5, 0.6],\n         [1,    0.7, 0.75]\n   ]\n};\n\nfunction myConfig(cfg) {\n     cfg.series.data   = [series];\n     cfg.series.series = [\n         { x:'time', y:'volume'},\n         { x:'time', y:'price'}\n     ];\n     cfg.series.series[0].style.marker.visible = true;\n     cfg.series.series[1].style.marker.visible = true;\n     cfg.series.series[1].style.marker.shape = hsgraph.Series.marker.diamond;\n     const axes = cfg.axes.primary;\n     cfg.chart.title.text    = 'Volume over Time';\n     cfg.chart.title.xpos    = 'end';\n     cfg.chart.title.ypos    = 'top';\n     cfg.chart.title.vOffset = -1.5;\n     axes.x.title.text       = 'time';\n     axes.y.title.text       = 'volume';\n     axes.x.crossesAt = 0;\n     axes.y.crossesAt = 0;\n     cfg.axes.secondary.x.visible = false;\n     cfg.axes.secondary.y.visible = false;\n}\n\nm.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: myConfig })\n});\n\n</file>\n<file name='style.css'>\n.hs-graph-chart { fill: #fff; }\n.hs-graph-series { stroke-width: 5; }\n</file>\n</example>\n\n### Configurations and Defaults\nSee {@link Graph.Graph.defaultConfig Graph.defaultConfig}\n"
			},
			"children": [
				{
					"id": 1295,
					"name": "Graph",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The main `Graph` object, responsible for setting up the grpahing components and logic."
					},
					"children": [
						{
							"id": 1310,
							"name": "scales",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 253,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Scales",
								"id": 1426
							}
						},
						{
							"id": 1341,
							"name": "adjustDomains",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1342,
									"name": "adjustDomains",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "determines the max ranges each coordinate of each series and auto-sets the domains on the respective scales."
									},
									"parameters": [
										{
											"id": 1343,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesConfig",
												"id": 1028
											}
										},
										{
											"id": 1344,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scales",
												"id": 1426
											}
										},
										{
											"id": 1345,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Data"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 352,
									"character": 17
								}
							]
						},
						{
							"id": 1329,
							"name": "adjustHeight",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1330,
									"name": "adjustHeight",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "adjust the height of the viewBox to match available height in containing window,\ne.g. after a resize"
									},
									"parameters": [
										{
											"id": 1331,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the Graph node\n"
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1416
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 299,
									"character": 16
								}
							]
						},
						{
							"id": 1332,
							"name": "adjustMargins",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1333,
									"name": "adjustMargins",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "check on update of axes bounding box and notify Graph.boxNotify"
									},
									"parameters": [
										{
											"id": 1334,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 312,
									"character": 17
								}
							]
						},
						{
							"id": 1325,
							"name": "adjustRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1326,
									"name": "adjustRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1327,
											"name": "plotArea",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Rect",
												"id": 75
											}
										},
										{
											"id": 1328,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scales",
												"id": 1426
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 287,
									"character": 15
								}
							]
						},
						{
							"id": 1359,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1360,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 1361,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1362,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1363,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1364,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 1365,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1366,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 1367,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1368,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1369,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 1319,
							"name": "createData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1320,
									"name": "createData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1321,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Data"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 267,
									"character": 22
								}
							]
						},
						{
							"id": 1311,
							"name": "createPlotArea",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1312,
									"name": "createPlotArea",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1313,
											"name": "cfgm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1314,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1317,
															"name": "bottom",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "Graph.ts",
																	"line": 255,
																	"character": 64
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1316,
															"name": "left",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "Graph.ts",
																	"line": 255,
																	"character": 49
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1318,
															"name": "right",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "Graph.ts",
																	"line": 255,
																	"character": 78
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1315,
															"name": "top",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "Graph.ts",
																	"line": 255,
																	"character": 36
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1317,
																1316,
																1318,
																1315
															]
														}
													],
													"sources": [
														{
															"fileName": "Graph.ts",
															"line": 255,
															"character": 32
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Rect",
										"id": 75
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 255,
									"character": 26
								}
							]
						},
						{
							"id": 1322,
							"name": "createScales",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1323,
									"name": "createScales",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1324,
											"name": "axes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Scales",
										"id": 1426
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 279,
									"character": 24
								}
							]
						},
						{
							"id": 1377,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1378,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 1379,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1380,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1381,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1382,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 1370,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1371,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 1372,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1373,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1374,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1375,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1376,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 1338,
							"name": "oncreate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1339,
									"name": "oncreate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1340,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1416
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 340,
									"character": 12
								}
							]
						},
						{
							"id": 1335,
							"name": "onupdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1336,
									"name": "onupdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1337,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1416
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 336,
									"character": 12
								}
							]
						},
						{
							"id": 1398,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1399,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1400,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1401,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1402,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1403,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1404,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1405,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1406,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1407,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1408,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 1389,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1390,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1391,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1392,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1393,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1394,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1395,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1396,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1397,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 1353,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1354,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 1355,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1356,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1357,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1358,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 1409,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1410,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1411,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1412,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1413,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1414,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 1349,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1350,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 1351,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 1352,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 1383,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1384,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 1385,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1386,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1387,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1388,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						},
						{
							"id": 1346,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1347,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1348,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1416
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1416
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 366,
									"character": 8
								}
							]
						},
						{
							"id": 1302,
							"name": "adjustConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1303,
									"name": "adjustConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Makes adjustments to cfg based on current settings.\nCalled just prior to drawing."
									},
									"parameters": [
										{
											"id": 1304,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all components\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 236,
									"character": 33
								}
							]
						},
						{
							"id": 1299,
							"name": "defaultConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1300,
									"name": "defaultConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Defines default values for all configurable parameters in `Graph`\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for the sequence of initializations.",
										"text": "#### Configurations and Defaults\n```\n cfg.graph = {@link Graph.GraphConfig <GraphConfig>} {\n    margin: {      // the margin between viewBox edges and nearest plot component\n       top: 10,    // viewBox units\n       left: 10,   // viewBox units\n       bottom: 10, // viewBox units\n       right: 10   // viewBox units\n    }\n }\n```"
									},
									"parameters": [
										{
											"id": 1301,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all\npreviously configured components.\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 219,
									"character": 34
								}
							]
						},
						{
							"id": 1296,
							"name": "makeConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1297,
									"name": "makeConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates and returns a `cfg` configuration object containing configuration entries\nfor  `Graph` and all of its subcomponents:\n- &nbsp; {@link Graph.Graph.config `cfg.graph`}: some general Graph setting, such as margins\n- &nbsp; {@link Canvas.Canvas.config `cfg.canvas`}:  the background canvas on which all components are rendered\n- &nbsp; {@link Chart.Chart.config `cfg.chart`}: the chart area and title\n- &nbsp; {@link Axes.Axes.config `cfg.axes`}: the x- and y-axes, tick marks and labels, and axis title\n- &nbsp; {@link Grid.Grid.config `cfg.grid`}: the major and minor gridlines\n- &nbsp; {@link Series.Series.config `cfg.series`}: the one or more data series to render\n- &nbsp; {@link Legend.Legend.config `cfg.legend`}: the legend for the shown series\nif a `userCfg` function is provided, it gets called after all configurations are\ninitialized with default values. The `cfg` object is passed as parameter into the\nfunction, which then can selectively overwrite certain settings as needed."
									},
									"parameters": [
										{
											"id": 1298,
											"name": "userCfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "a user defined configuration function with the signature\n`(cfg:{@link Config Config}):void.`\n"
											},
											"type": {
												"type": "reference",
												"name": "CfgFn",
												"id": 1292
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Config",
										"id": 1272
									}
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 180,
									"character": 29
								}
							]
						},
						{
							"id": 1305,
							"name": "marginOffset",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1309,
									"name": "bottom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Graph.ts",
											"line": 249,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1306,
									"name": "left",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Graph.ts",
											"line": 246,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1307,
									"name": "right",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Graph.ts",
											"line": 247,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1308,
									"name": "top",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Graph.ts",
											"line": 248,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1309,
										1306,
										1307,
										1308
									]
								}
							],
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 245,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1310
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1341,
								1329,
								1332,
								1325,
								1359,
								1365,
								1319,
								1311,
								1322,
								1377,
								1370,
								1338,
								1335,
								1398,
								1389,
								1353,
								1409,
								1349,
								1383,
								1346,
								1302,
								1299,
								1296
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1305
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 163,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SVGElem",
							"id": 110
						}
					]
				},
				{
					"id": 1292,
					"name": "CfgFn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "signature of a user configuration function, used in {@link Graph.Graph.makeConfig `Graph.makeConfig`}"
					},
					"signatures": [
						{
							"id": 1293,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "signature of a user configuration function, used in {@link Graph.Graph.makeConfig `Graph.makeConfig`}"
							},
							"parameters": [
								{
									"id": 1294,
									"name": "cfg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the fully initialized configuration object. `CfgFn` should overwrite selected values as needed.\n"
									},
									"type": {
										"type": "reference",
										"name": "Config",
										"id": 1272
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 158,
							"character": 22
						}
					]
				},
				{
					"id": 1272,
					"name": "Config",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1279,
							"name": "axes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 116,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "AxesConfig",
								"id": 1451
							}
						},
						{
							"id": 1278,
							"name": "canvas",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 115,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "CanvasConfig",
								"id": 183
							}
						},
						{
							"id": 1280,
							"name": "chart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 117,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ChartConfig",
								"id": 1044
							}
						},
						{
							"id": 1277,
							"name": "graph",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 114,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphConfig",
								"id": 1284
							}
						},
						{
							"id": 1281,
							"name": "grid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 118,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "GridsConfig",
								"id": 1146
							}
						},
						{
							"id": 1283,
							"name": "legend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "LegendConfig",
								"id": 1244
							}
						},
						{
							"id": 1282,
							"name": "series",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesConfig",
								"id": 1028
							}
						},
						{
							"id": 1273,
							"name": "viewBox",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 113,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1276,
											"name": "h",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Graph.ts",
													"line": 113,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1275,
											"name": "w",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Graph.ts",
													"line": 113,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1276,
												1275
											]
										}
									],
									"sources": [
										{
											"fileName": "Graph.ts",
											"line": 113,
											"character": 13
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1279,
								1278,
								1280,
								1277,
								1281,
								1283,
								1282,
								1273
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 112,
							"character": 23
						}
					]
				},
				{
					"id": 1271,
					"name": "GraphBaseCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 107,
							"character": 29
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						},
						{
							"type": "reference",
							"name": "GraphConfig",
							"id": 1284
						}
					]
				},
				{
					"id": 1284,
					"name": "GraphConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "`Graph` related configuration options.\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for all configurations and\n{@link Graph.Graph.config Graph.config} for default `Graph` configuration."
					},
					"children": [
						{
							"id": 1285,
							"name": "margin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 129,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1286,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1289,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Graph.ts",
													"line": 132,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1288,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Graph.ts",
													"line": 131,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1290,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Graph.ts",
													"line": 133,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1287,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Graph.ts",
													"line": 130,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1289,
												1288,
												1290,
												1287
											]
										}
									],
									"sources": [
										{
											"fileName": "Graph.ts",
											"line": 129,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 1291,
							"name": "timeCond",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 135,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1285,
								1291
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 128,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphBaseCfg",
							"id": 1271
						}
					]
				},
				{
					"id": 1260,
					"name": "LabelCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Configurator for a title, such as Chart title, or Axis title.\nTitles have their own visible switch."
					},
					"children": [
						{
							"id": 1262,
							"name": "cssClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a css class to set"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 50,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.cssClass",
								"id": 94
							}
						},
						{
							"id": 1268,
							"name": "hOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "horizontal label offset in 'em'; uses `dx` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 68,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.hOffset",
								"id": 100
							}
						},
						{
							"id": 1263,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a style to set"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 53,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.style",
								"id": 95
							}
						},
						{
							"id": 1261,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the text to show"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.text",
								"id": 93
							}
						},
						{
							"id": 1269,
							"name": "vOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "vertical label offset in 'em'; uses `dy` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 71,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.vOffset",
								"id": 101
							}
						},
						{
							"id": 1270,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						},
						{
							"id": 1264,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional absolute x positioning on the canvas, e.g. '50%'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 56,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.x",
								"id": 96
							}
						},
						{
							"id": 1266,
							"name": "xpos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "horizontal align: 'start' | 'middle' | 'end'; uses `text-align` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "TextHAlign",
								"id": 102
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.xpos",
								"id": 98
							}
						},
						{
							"id": 1265,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional absolute y positioning on the canvas, e.g. '50%'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 59,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.y",
								"id": 97
							}
						},
						{
							"id": 1267,
							"name": "ypos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "vertical align: 'top' | 'center' | 'bottom'; uses `dy` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 65,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "TextVAlign",
								"id": 106
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TextElem.ypos",
								"id": 99
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1262,
								1268,
								1263,
								1261,
								1269,
								1270,
								1264,
								1266,
								1265,
								1267
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 104,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "TextElem",
							"id": 92
						},
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						}
					]
				},
				{
					"id": 1258,
					"name": "VisibleCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1259,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1259
							]
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 96,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GraphBaseCfg",
							"id": 1271
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "CanvasConfig",
							"id": 183
						},
						{
							"type": "reference",
							"name": "ColoredCfg",
							"id": 986
						},
						{
							"type": "reference",
							"name": "ChartConfig",
							"id": 1044
						},
						{
							"type": "reference",
							"name": "GridCfg",
							"id": 1141
						},
						{
							"type": "reference",
							"name": "LabelCfg",
							"id": 1260
						},
						{
							"type": "reference",
							"name": "MarkCfg",
							"id": 1441
						},
						{
							"type": "reference",
							"name": "AxisCfg",
							"id": 1460
						}
					]
				},
				{
					"id": 1416,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 67,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1415,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 66,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				},
				{
					"id": 1418,
					"name": "viewBoxHeight",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 93,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "700"
				},
				{
					"id": 1417,
					"name": "viewBoxWidth",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 92,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1000"
				},
				{
					"id": 1419,
					"name": "copy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1420,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a deep copy of `def`, taking fields present in `update` to supercede the default value."
							},
							"parameters": [
								{
									"id": 1421,
									"name": "def",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "contains the default setting for each parameter\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "Graph.ts",
							"line": 142,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1295
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1292,
						1272,
						1271,
						1284,
						1260,
						1258
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1416
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1415,
						1418,
						1417
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1419
					]
				}
			],
			"sources": [
				{
					"fileName": "Graph.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1140,
			"name": "\"Grid\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Grid.ts",
			"comment": {
				"shortText": "# Grid\nrenders the major and minor gridlines in each direction.",
				"text": "### Attributes\nThe `Chart` class is called by {@link Graph.Graph `Graph`} as\n`m(Grid, { cfg:cfg.grid, scales:scales })`\nwith the following attributes:\n- cfg: a {@link Grid.GridsConfig GridsConfig} object\n- scales: a {@link Axes.Scales Scales } object\n\n### Configurations and Defaults\nSee {@link Grid.Grid.defaultConfig Grid.defaultConfig}\n\n"
			},
			"children": [
				{
					"id": 1149,
					"name": "Grid",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1185,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1186,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 1187,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1188,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1189,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1190,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 1191,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1192,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 1193,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1194,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1195,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 1156,
							"name": "drawHorGrid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1157,
									"name": "drawHorGrid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Draws horizontal gridlines parallel to the x-axis"
									},
									"parameters": [
										{
											"id": 1158,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1159,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1160,
															"name": "visible",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "Grid.ts",
																	"line": 91,
																	"character": 36
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1160
															]
														}
													],
													"sources": [
														{
															"fileName": "Grid.ts",
															"line": 91,
															"character": 28
														}
													]
												}
											}
										},
										{
											"id": 1161,
											"name": "scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scale",
												"id": 2
											}
										},
										{
											"id": 1162,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumRange"
											}
										},
										{
											"id": 1163,
											"name": "ticks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TickDefs",
												"id": 1438
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 91,
									"character": 23
								}
							]
						},
						{
							"id": 1164,
							"name": "drawVerGrid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1165,
									"name": "drawVerGrid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Draws vertical gridlines parallel to the y-axis"
									},
									"parameters": [
										{
											"id": 1166,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1167,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1168,
															"name": "visible",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "Grid.ts",
																	"line": 100,
																	"character": 36
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1168
															]
														}
													],
													"sources": [
														{
															"fileName": "Grid.ts",
															"line": 100,
															"character": 28
														}
													]
												}
											}
										},
										{
											"id": 1169,
											"name": "scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scale",
												"id": 2
											}
										},
										{
											"id": 1170,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NumRange"
											}
										},
										{
											"id": 1171,
											"name": "ticks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TickDefs",
												"id": 1438
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 100,
									"character": 23
								}
							]
						},
						{
							"id": 1203,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1204,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 1205,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1206,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1207,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1208,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 1196,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1197,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 1198,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1199,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1200,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1201,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1202,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 1224,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1225,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1226,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1227,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1228,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1229,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1230,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1231,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1232,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1233,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1234,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 1215,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1216,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1217,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1218,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1219,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1220,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 1221,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1222,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1223,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 1179,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1180,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 1181,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 1182,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 1183,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1184,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 1235,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1236,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 1237,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 1238,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1239,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1240,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 1175,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1176,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 1177,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 1178,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 1209,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1210,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 1211,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1212,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1213,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1214,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						},
						{
							"id": 1172,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1173,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1174,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1242
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1242
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 107,
									"character": 8
								}
							]
						},
						{
							"id": 1153,
							"name": "adjustConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1154,
									"name": "adjustConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Makes adjustments to cfg based on current settings"
									},
									"parameters": [
										{
											"id": 1155,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all components\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 85,
									"character": 23
								}
							]
						},
						{
							"id": 1150,
							"name": "defaultConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1151,
									"name": "defaultConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Defines default values for all configurable parameters in `Graph`\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for the sequence of initializations.",
										"text": "### Configurations and Defaults\n```\n cfg.grid = {@link Grid.GridsConfig <GridsConfig>}{\n     major: {\n         hor: { visible:true },\n         ver: { visible:true }\n     },\n     minor: {\n         hor: { visible:false },\n         ver: { visible:false }\n     }\n }\n```"
									},
									"parameters": [
										{
											"id": 1152,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all\npreviously configured components.\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 68,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1185,
								1191,
								1156,
								1164,
								1203,
								1196,
								1224,
								1215,
								1179,
								1235,
								1175,
								1209,
								1172,
								1153,
								1150
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 47,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SVGElem",
							"id": 110
						}
					]
				},
				{
					"id": 1141,
					"name": "GridCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "defines configurable parameters for a grid"
					},
					"children": [
						{
							"id": 1142,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1142
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 29,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						}
					]
				},
				{
					"id": 1143,
					"name": "GridsCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "defines configurable parameters for horizontal and vertical grids"
					},
					"children": [
						{
							"id": 1144,
							"name": "hor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 34,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "GridCfg",
								"id": 1141
							}
						},
						{
							"id": 1145,
							"name": "ver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 35,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "GridCfg",
								"id": 1141
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1144,
								1145
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 33,
							"character": 26
						}
					]
				},
				{
					"id": 1146,
					"name": "GridsConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings."
					},
					"children": [
						{
							"id": 1147,
							"name": "major",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "major grid lines"
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "GridsCfg",
								"id": 1143
							}
						},
						{
							"id": 1148,
							"name": "minor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "minor grid lines"
							},
							"sources": [
								{
									"fileName": "Grid.ts",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "GridsCfg",
								"id": 1143
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1147,
								1148
							]
						}
					],
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 39,
							"character": 28
						}
					]
				},
				{
					"id": 1242,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 19,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1241,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Grid.ts",
							"line": 18,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1149
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1141,
						1143,
						1146
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1242
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1241
					]
				}
			],
			"sources": [
				{
					"fileName": "Grid.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1243,
			"name": "\"Legend\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Legend.ts",
			"comment": {
				"shortText": "# Legend\nrenders the series' legend .",
				"text": "### Attributes\nThe `Legend` class is called by {@link Graph.Graph `Graph`} as\n`m(Legend, { cfg:cfg.legend })`\nwith the following attributes:\n- cfg: a {@link Legend.LegendConfig LegendConfig} object\n\n### Configurations and Defaults\nSee {@link Legend.Legend.defaultConfig Legend.defaultConfig}\n\n"
			},
			"children": [
				{
					"id": 1245,
					"name": "Legend",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1252,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1253,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1254,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1256
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1256
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.ts",
									"line": 53,
									"character": 8
								}
							]
						},
						{
							"id": 1249,
							"name": "adjustConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1250,
									"name": "adjustConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Makes adjustments to cfg based on current settings"
									},
									"parameters": [
										{
											"id": 1251,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all components\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.ts",
									"line": 49,
									"character": 23
								}
							]
						},
						{
							"id": 1246,
							"name": "defaultConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1247,
									"name": "defaultConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Defines default values for all configurable parameters in `Legend`\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for the sequence of initializations.",
										"text": "### Configurations and Defaults\n```\n cfg.legend = {@link Legend.LegendConfig <LegendConfig>}{\n }\n```"
									},
									"parameters": [
										{
											"id": 1248,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all\npreviously configured components.\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.ts",
									"line": 40,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1252,
								1249,
								1246
							]
						}
					],
					"sources": [
						{
							"fileName": "Legend.ts",
							"line": 27,
							"character": 19
						}
					]
				},
				{
					"id": 1244,
					"name": "LegendConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines configurable settings."
					},
					"sources": [
						{
							"fileName": "Legend.ts",
							"line": 24,
							"character": 29
						}
					]
				},
				{
					"id": 1256,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Legend.ts",
							"line": 18,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1255,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Legend.ts",
							"line": 17,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1245
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1244
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1256
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1255
					]
				}
			],
			"sources": [
				{
					"fileName": "Legend.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 264,
			"name": "\"Plot\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Plot.ts",
			"comment": {
				"shortText": "Abstract base class for plots."
			},
			"children": [
				{
					"id": 265,
					"name": "Plot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 325,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 326,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 327,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 328,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 329,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 330,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 331,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 332,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 333,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 334,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 335,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 293,
							"name": "drawArea",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 294,
									"name": "drawArea",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 295,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 296,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 297,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 298,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 299,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 300,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 301,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 302,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 71,
									"character": 12
								}
							]
						},
						{
							"id": 284,
							"name": "drawLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 285,
									"name": "drawLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 286,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 287,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 288,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 289,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 290,
											"name": "lbl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 291,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 292,
											"name": "sDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 51,
									"character": 13
								}
							]
						},
						{
							"id": 266,
							"name": "drawLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 267,
									"name": "drawLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 268,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 269,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 270,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 271,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 272,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 273,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 274,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 21,
									"character": 12
								}
							]
						},
						{
							"id": 275,
							"name": "drawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 276,
									"name": "drawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 277,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 278,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 279,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 280,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 281,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 282,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 283,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 26,
									"character": 14
								}
							]
						},
						{
							"id": 343,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 344,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 345,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 346,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 347,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 348,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 336,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 337,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 338,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 339,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 340,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 341,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 342,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 303,
							"name": "plot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 304,
									"name": "plot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 305,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 306,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 307,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 308,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 309,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vnode",
											"id": 382
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 82,
									"character": 17
								}
							]
						},
						{
							"id": 364,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 365,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 366,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 367,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 368,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 369,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 370,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 371,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 372,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 373,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 374,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 355,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 356,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 357,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 358,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 359,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 360,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 361,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 362,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 363,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 319,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 320,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 321,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 322,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 323,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 324,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 310,
							"name": "setDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 311,
									"name": "setDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 312,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 313,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 314,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 84,
									"character": 15
								}
							]
						},
						{
							"id": 375,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 376,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 377,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 378,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 379,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 380,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 315,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 316,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 317,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 318,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 349,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 350,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 351,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 352,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 353,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 354,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 382
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								325,
								331,
								293,
								284,
								266,
								275,
								343,
								336,
								303,
								364,
								355,
								319,
								310,
								375,
								315,
								349
							]
						}
					],
					"sources": [
						{
							"fileName": "Plot.ts",
							"line": 20,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SVGElem",
							"id": 110
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "PlotLine",
							"id": 384
						},
						{
							"type": "reference",
							"name": "PlotMarkers",
							"id": 503
						},
						{
							"type": "reference",
							"name": "PlotBar",
							"id": 622
						},
						{
							"type": "reference",
							"name": "PlotArea",
							"id": 751
						}
					]
				},
				{
					"id": 382,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Plot.ts",
							"line": 7,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 381,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Plot.ts",
							"line": 6,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						265
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						382
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						381
					]
				}
			],
			"sources": [
				{
					"fileName": "Plot.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 750,
			"name": "\"PlotArea\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/PlotArea.ts",
			"comment": {
				"shortText": "## PlotArea\nPlots data as an area. `PlotArea` is called if the series' `type` is 'area'.\nThe area will be filled between a series as indexed by `y` and the x-axis,\nor a second series indexed by `yBase`.\nIf `yBase` equals `$stacked`, subsequent series will be stacked upon each other.\n`PlotArea` recognizes the following attributes:\n- `x`: name of the x series\n- `y`: name of the y series, also used as higher series when filling against `yBase`\n- `yBase`: optional lower series to fill against instead of the x-axis.\n- `map`: Use 'stacked' to stack series upon each other. Use 'shared' to show the share of\n   each series, normalized to 1.",
				"text": "<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume', 'costs'],\n   rows:[\n     [-1,  0.2, 0.3],\n     [0.2, 0.7, 0.2],\n     [0.4, 0.1, 0.3],\n     [0.6, 0,   0.1],\n     [0.8, 0.3, 0.5],\n     [1,   0.2, 0.4]\n]};\n\nm.mount(root, {\n   view:() => m(hslayout.Layout, {\n      rows: [],\n      content: [\n         m(hsgraph.Graph, {cfgFn: cfg => defCfg(cfg)}),\n         m(hsgraph.Graph, {cfgFn: cfg => defCfg(cfg, 'stacked')}),\n         m(hsgraph.Graph, {cfgFn: cfg => defCfg(cfg, 'shared')})\n      ]\n   })\n});\nfunction defCfg(cfg, map) {\n    cfg.series.series = [\n       { x:'time', y:'volume', map:map, type: 'area' },\n       { x:'time', y:'costs',  map:map, type: 'area' }\n    ];\n    cfg.series.data      = [series];\n    cfg.series.series[0].style.fill.color = 'rgba(128, 128, 255, 0.5)';\n    cfg.series.series[1].style.fill.color = 'rgba(0, 128, 0, 0.5)';\n    cfg.axes.primary.y.scale.domain = [0, 1];\n    cfg.axes.primary.y.title.visible = false;\n    cfg.chart.title.visible = false;\n}\n\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 751,
					"name": "PlotArea",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 811,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 812,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 813,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 814,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 815,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 816,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 817,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 818,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 819,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 820,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 821,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 786,
							"name": "drawArea",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 787,
									"name": "drawArea",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 788,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 789,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 790,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 791,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 792,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 793,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 794,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 795,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawArea",
										"id": 293
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 71,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawArea",
								"id": 293
							}
						},
						{
							"id": 777,
							"name": "drawLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 778,
									"name": "drawLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 779,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 780,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 781,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 782,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 783,
											"name": "lbl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 784,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 785,
											"name": "sDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLabel",
										"id": 284
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 51,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLabel",
								"id": 284
							}
						},
						{
							"id": 759,
							"name": "drawLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 760,
									"name": "drawLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 761,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 762,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 763,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 764,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 765,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 766,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 767,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLine",
										"id": 266
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 21,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLine",
								"id": 266
							}
						},
						{
							"id": 768,
							"name": "drawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 769,
									"name": "drawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 770,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 771,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 772,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 773,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 774,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 775,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 776,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawMarker",
										"id": 275
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 26,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawMarker",
								"id": 275
							}
						},
						{
							"id": 829,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 830,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 831,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 832,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 833,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 834,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 822,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 823,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 824,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 825,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 826,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 827,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 828,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 752,
							"name": "plot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 753,
									"name": "plot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 754,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 755,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 756,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 757,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 758,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vnode",
											"id": 868
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "Plot.plot",
										"id": 303
									}
								}
							],
							"sources": [
								{
									"fileName": "PlotArea.ts",
									"line": 64,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Plot.plot",
								"id": 303
							}
						},
						{
							"id": 850,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 851,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 852,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 853,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 854,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 855,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 856,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 857,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 858,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 859,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 860,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 841,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 842,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 843,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 844,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 845,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 846,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 847,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 848,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 849,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 805,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 806,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 807,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 808,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 809,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 810,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 796,
							"name": "setDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 797,
									"name": "setDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 798,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 799,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 800,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.setDefaults",
										"id": 310
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 84,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.setDefaults",
								"id": 310
							}
						},
						{
							"id": 861,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 862,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 863,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 864,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 865,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 866,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 801,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 802,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 803,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 804,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 835,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 836,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 837,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 838,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 839,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 840,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 868
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								811,
								817,
								786,
								777,
								759,
								768,
								829,
								822,
								752,
								850,
								841,
								805,
								796,
								861,
								801,
								835
							]
						}
					],
					"sources": [
						{
							"fileName": "PlotArea.ts",
							"line": 63,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Plot",
							"id": 265
						}
					]
				},
				{
					"id": 868,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "PlotArea.ts",
							"line": 57,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 867,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "PlotArea.ts",
							"line": 56,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						751
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						868
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						867
					]
				}
			],
			"sources": [
				{
					"fileName": "PlotArea.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 621,
			"name": "\"PlotBar\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/PlotBar.ts",
			"comment": {
				"shortText": "## PlotBar\nPlots data as vertical bars by configuring the series' `type`\nas {@link Series.Series.plot 'bar'}. The `cols` name array starts with\nthe x-value column, or `undefined` to use the row index as x-values.",
				"text": "#### Mode 1 - Classic Bars\nSpecify a single name for y-values to generate bars that reach up from the\nx-axis to the value in each data row. Negative heights are allowed.\nExample: `y:'volume'`\n\n#### Mode 2 - High-Low Bars\nSpecify names for y and yBase values to create high-low bars that reach from the\ny-value to the yBase-value for each data row. Negative heights are allowed.\nExample: `y:'open', yBase:'close'`\n\n#### Example\n<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume', 'open', 'close'],\n   rows:[\n     [5, 0.2, 0.3, 0.5],\n     [10, 0.7, 0.1, 0.2],\n     [15, 0.4, 0.5, 0.6],\n     [20, 0.1, 0.4, 0.6],\n     [25,0.5, 0.3, 0.55],\n     [30, 0.3, 0.4, 0.5]\n]};\n\nm.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: cfg => {\n         cfg.chart.title.text = 'Bar Chart';\n         cfg.series.data   = [series];\n         cfg.series.series = [\n             { y:'volume', type: 'bar'},\n             { y:'open', yBase:'close', type: 'bar'}\n         ];\n         cfg.series.series[0].style.bar.width = 80;\n         cfg.series.series[1].style.bar.offset = 0;\n         cfg.series.series[1].style.bar.width = 10;\n     }})\n});\n\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 622,
					"name": "PlotBar",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 692,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 693,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 694,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 695,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 696,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 697,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 698,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 699,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 700,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 701,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 702,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 672,
							"name": "drawArea",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 673,
									"name": "drawArea",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 674,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 675,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 676,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 677,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 678,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 679,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 680,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 681,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawArea",
										"id": 293
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 71,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawArea",
								"id": 293
							}
						},
						{
							"id": 623,
							"name": "drawBar",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 624,
									"name": "drawBar",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 625,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 626,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 627,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 628,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 629,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 630,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 631,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 632,
											"name": "s",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "PlotBar.ts",
									"line": 60,
									"character": 11
								}
							]
						},
						{
							"id": 663,
							"name": "drawLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 664,
									"name": "drawLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 665,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 666,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 667,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 668,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 669,
											"name": "lbl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 670,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 671,
											"name": "sDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLabel",
										"id": 284
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 51,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLabel",
								"id": 284
							}
						},
						{
							"id": 645,
							"name": "drawLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 646,
									"name": "drawLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 647,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 648,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 649,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 650,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 651,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 652,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 653,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLine",
										"id": 266
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 21,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLine",
								"id": 266
							}
						},
						{
							"id": 654,
							"name": "drawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 655,
									"name": "drawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 656,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 657,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 658,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 659,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 660,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 661,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 662,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawMarker",
										"id": 275
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 26,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawMarker",
								"id": 275
							}
						},
						{
							"id": 710,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 711,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 712,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 713,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 714,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 715,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 703,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 704,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 705,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 706,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 707,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 708,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 709,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 638,
							"name": "plot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 639,
									"name": "plot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 640,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 641,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 642,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 643,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 644,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vnode",
											"id": 749
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "Plot.plot",
										"id": 303
									}
								}
							],
							"sources": [
								{
									"fileName": "PlotBar.ts",
									"line": 89,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Plot.plot",
								"id": 303
							}
						},
						{
							"id": 731,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 732,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 733,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 734,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 735,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 736,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 737,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 738,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 739,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 740,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 741,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 722,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 723,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 724,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 725,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 726,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 727,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 728,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 729,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 730,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 686,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 687,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 688,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 689,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 690,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 691,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 633,
							"name": "setDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 634,
									"name": "setDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 635,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 636,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 637,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Plot.setDefaults",
										"id": 310
									}
								}
							],
							"sources": [
								{
									"fileName": "PlotBar.ts",
									"line": 77,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Plot.setDefaults",
								"id": 310
							}
						},
						{
							"id": 742,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 743,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 744,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 745,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 746,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 747,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 682,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 683,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 684,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 685,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 716,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 717,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 718,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 719,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 720,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 721,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 749
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								692,
								698,
								672,
								623,
								663,
								645,
								654,
								710,
								703,
								638,
								731,
								722,
								686,
								633,
								742,
								682,
								716
							]
						}
					],
					"sources": [
						{
							"fileName": "PlotBar.ts",
							"line": 59,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Plot",
							"id": 265
						}
					]
				},
				{
					"id": 749,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "PlotBar.ts",
							"line": 51,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 748,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "PlotBar.ts",
							"line": 50,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						622
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						749
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						748
					]
				}
			],
			"sources": [
				{
					"fileName": "PlotBar.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 383,
			"name": "\"PlotLine\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/PlotLine.ts",
			"comment": {
				"shortText": "## PlotLine\nPlots data as a line by configuring the series' `type`\nas {@link Series.Series.plot 'line'}. The `cols` name array starts with\nthe x-value column, followed by the y-column.",
				"text": "<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume'],\n   rows:[\n     [-1, 0.2],\n     [0.2, 0.7],\n     [0.4, -0.2],\n     [0.6, 0],\n     [0.8, 0.5],\n     [1, 0.7]\n]};\n\nm.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: cfg => {\n         cfg.chart.title.text          = 'Simple Example';\n         cfg.series.data   = [series];\n         cfg.series.series = [{ x:'time', y:'volume' }];\n     }})\n});\n\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 384,
					"name": "PlotLine",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 444,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 445,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 446,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 447,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 448,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 449,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 450,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 451,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 452,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 453,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 454,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 419,
							"name": "drawArea",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 420,
									"name": "drawArea",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 421,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 422,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 423,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 424,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 425,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 426,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 427,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 428,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawArea",
										"id": 293
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 71,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawArea",
								"id": 293
							}
						},
						{
							"id": 410,
							"name": "drawLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 411,
									"name": "drawLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 412,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 413,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 414,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 415,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 416,
											"name": "lbl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 417,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 418,
											"name": "sDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLabel",
										"id": 284
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 51,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLabel",
								"id": 284
							}
						},
						{
							"id": 392,
							"name": "drawLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 393,
									"name": "drawLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 394,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 395,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 396,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 397,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 398,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 399,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 400,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLine",
										"id": 266
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 21,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLine",
								"id": 266
							}
						},
						{
							"id": 401,
							"name": "drawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 402,
									"name": "drawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 403,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 404,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 405,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 406,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 407,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 408,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 409,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawMarker",
										"id": 275
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 26,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawMarker",
								"id": 275
							}
						},
						{
							"id": 462,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 463,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 464,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 465,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 466,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 467,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 455,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 456,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 457,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 458,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 459,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 460,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 461,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 385,
							"name": "plot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 386,
									"name": "plot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 387,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 388,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 389,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 390,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 391,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vnode",
											"id": 501
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "Plot.plot",
										"id": 303
									}
								}
							],
							"sources": [
								{
									"fileName": "PlotLine.ts",
									"line": 41,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Plot.plot",
								"id": 303
							}
						},
						{
							"id": 483,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 484,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 485,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 486,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 487,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 488,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 489,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 490,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 491,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 492,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 493,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 474,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 475,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 476,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 477,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 478,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 479,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 480,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 481,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 482,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 438,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 439,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 440,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 441,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 442,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 443,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 429,
							"name": "setDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 430,
									"name": "setDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 431,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 432,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 433,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.setDefaults",
										"id": 310
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 84,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.setDefaults",
								"id": 310
							}
						},
						{
							"id": 494,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 495,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 496,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 497,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 498,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 499,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 434,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 435,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 436,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 437,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 468,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 469,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 470,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 471,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 472,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 473,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 501
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								444,
								450,
								419,
								410,
								392,
								401,
								462,
								455,
								385,
								483,
								474,
								438,
								429,
								494,
								434,
								468
							]
						}
					],
					"sources": [
						{
							"fileName": "PlotLine.ts",
							"line": 40,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Plot",
							"id": 265
						}
					]
				},
				{
					"id": 501,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "PlotLine.ts",
							"line": 34,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 500,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "PlotLine.ts",
							"line": 33,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						384
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						501
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						500
					]
				}
			],
			"sources": [
				{
					"fileName": "PlotLine.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 502,
			"name": "\"PlotMarkers\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/PlotMarkers.ts",
			"comment": {
				"shortText": "## PlotMarkers\nPlots data as markers by configuring the series' `type`\nas {@link Series.Series.plot 'markers'}.\nThe `cols` name array starts with\nthe x-value column, followed by the y-column.",
				"text": "<example>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume'],\n   rows:[\n     [-1, 0.2],\n     [0.2, 0.7],\n     [0.4, -0.2],\n     [0.6, 0],\n     [0.8, 0.5],\n     [1, 0.7]\n]};\n\nm.mount(root, {\n     view:() => m(hsgraph.Graph, {cfgFn: cfg => {\n         cfg.chart.title.text = 'Simple Example';\n         cfg.series.data      = [series];\n         cfg.series.series    = [{ x:'time', y:'volume', type: 'marker' }];\n     }})\n});\n\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 503,
					"name": "PlotMarkers",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 563,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 564,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 565,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 566,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 567,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 568,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 569,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 570,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 571,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 572,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 573,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 538,
							"name": "drawArea",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 539,
									"name": "drawArea",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 540,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 541,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 542,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 543,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 544,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 545,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 546,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 547,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawArea",
										"id": 293
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 71,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawArea",
								"id": 293
							}
						},
						{
							"id": 529,
							"name": "drawLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 530,
									"name": "drawLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 531,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 532,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 533,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 534,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 535,
											"name": "lbl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 536,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 537,
											"name": "sDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLabel",
										"id": 284
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 51,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLabel",
								"id": 284
							}
						},
						{
							"id": 511,
							"name": "drawLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 512,
									"name": "drawLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 513,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 514,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 515,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 516,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 517,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 518,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 519,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawLine",
										"id": 266
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 21,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawLine",
								"id": 266
							}
						},
						{
							"id": 520,
							"name": "drawMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 521,
									"name": "drawMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 522,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 523,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 524,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 525,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 526,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 527,
											"name": "sStyle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesStyle",
												"id": 1009
											}
										},
										{
											"id": 528,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.drawMarker",
										"id": 275
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 26,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.drawMarker",
								"id": 275
							}
						},
						{
							"id": 581,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 582,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 583,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 584,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 585,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 586,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 574,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 576,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 577,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 578,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 579,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 580,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 504,
							"name": "plot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 505,
									"name": "plot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 506,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 507,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 508,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 509,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 510,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Vnode",
											"id": 620
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "Plot.plot",
										"id": 303
									}
								}
							],
							"sources": [
								{
									"fileName": "PlotMarkers.ts",
									"line": 42,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Plot.plot",
								"id": 303
							}
						},
						{
							"id": 602,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 603,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 604,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 605,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 606,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 607,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 608,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 609,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 610,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 611,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 612,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 593,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 594,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 595,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 596,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 597,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 598,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 599,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 600,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 601,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 557,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 558,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 559,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 560,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 561,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 562,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 548,
							"name": "setDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 549,
									"name": "setDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 550,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Data"
											}
										},
										{
											"id": 551,
											"name": "series",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										},
										{
											"id": 552,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Plot.setDefaults",
										"id": 310
									}
								}
							],
							"sources": [
								{
									"fileName": "Plot.ts",
									"line": 84,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Plot.setDefaults",
								"id": 310
							}
						},
						{
							"id": 613,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 614,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 615,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 616,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 617,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 618,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 553,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 554,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 555,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 556,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 587,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 588,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 589,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 590,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 591,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 592,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 620
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								563,
								569,
								538,
								529,
								511,
								520,
								581,
								574,
								504,
								602,
								593,
								557,
								548,
								613,
								553,
								587
							]
						}
					],
					"sources": [
						{
							"fileName": "PlotMarkers.ts",
							"line": 41,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Plot",
							"id": 265
						}
					]
				},
				{
					"id": 620,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "PlotMarkers.ts",
							"line": 35,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 619,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "PlotMarkers.ts",
							"line": 34,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						503
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						620
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						619
					]
				}
			],
			"sources": [
				{
					"fileName": "PlotMarkers.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 69,
			"name": "\"SVGElem\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/SVGElem.ts",
			"children": [
				{
					"id": 102,
					"name": "TextHAlign",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 105,
							"name": "end",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 85,
									"character": 7
								}
							],
							"defaultValue": "\"end\""
						},
						{
							"id": 104,
							"name": "middle",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 84,
									"character": 10
								}
							],
							"defaultValue": "\"middle\""
						},
						{
							"id": 103,
							"name": "start",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 83,
									"character": 9
								}
							],
							"defaultValue": "\"start\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								105,
								104,
								103
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 82,
							"character": 22
						}
					]
				},
				{
					"id": 106,
					"name": "TextVAlign",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 109,
							"name": "bottom",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 91,
									"character": 10
								}
							],
							"defaultValue": "\"bottom\""
						},
						{
							"id": 108,
							"name": "center",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 90,
									"character": 10
								}
							],
							"defaultValue": "\"center\""
						},
						{
							"id": 107,
							"name": "top",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 89,
									"character": 7
								}
							],
							"defaultValue": "\"top\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								109,
								108,
								107
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 88,
							"character": 22
						}
					]
				},
				{
					"id": 110,
					"name": "SVGElem",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 121,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 123,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 124,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 125,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 126,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							]
						},
						{
							"id": 127,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 129,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 130,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 131,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							]
						},
						{
							"id": 139,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 140,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 141,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 142,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 143,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 144,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							]
						},
						{
							"id": 132,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 133,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 134,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 135,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 136,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 137,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 138,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							]
						},
						{
							"id": 160,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 161,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 162,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 163,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 164,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 165,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 166,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 167,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 168,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 169,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 170,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							]
						},
						{
							"id": 151,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 152,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 153,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 154,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 155,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 156,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 157,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 158,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 159,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							]
						},
						{
							"id": 115,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 116,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 117,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 118,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 119,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 120,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							]
						},
						{
							"id": 171,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 172,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 173,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 174,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 175,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 176,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							]
						},
						{
							"id": 111,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 112,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 113,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 114,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							]
						},
						{
							"id": 145,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 146,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 147,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 148,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 149,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 150,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 178
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								121,
								127,
								139,
								132,
								160,
								151,
								115,
								171,
								111,
								145
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 94,
							"character": 29
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "Canvas",
							"id": 186
						},
						{
							"type": "reference",
							"name": "Plot",
							"id": 265
						},
						{
							"type": "reference",
							"name": "Series",
							"id": 870
						},
						{
							"type": "reference",
							"name": "Chart",
							"id": 1047
						},
						{
							"type": "reference",
							"name": "Grid",
							"id": 1149
						},
						{
							"type": "reference",
							"name": "Graph",
							"id": 1295
						},
						{
							"type": "reference",
							"name": "Axes",
							"id": 1467
						}
					]
				},
				{
					"id": 87,
					"name": "Area",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 89,
							"name": "h",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 40,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 91,
							"name": "hunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 42,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 88,
							"name": "w",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 39,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 90,
							"name": "wunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								89,
								91,
								88,
								90
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 38,
							"character": 21
						}
					]
				},
				{
					"id": 78,
					"name": "ExtendedPoint",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "svg extended Point, measured in viewbox coordinates.\nExtends `Point` with optional `dx` and 'dy' offsets and optional units."
					},
					"children": [
						{
							"id": 79,
							"name": "dx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 31,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 81,
							"name": "dxunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 33,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 80,
							"name": "dy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 32,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 82,
							"name": "dyunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 34,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 83,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "x-viewbox value of the point"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 9,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Point.x",
								"id": 71
							}
						},
						{
							"id": 85,
							"name": "xunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "viewbox unit to use for x coordinate. Allowed values are 'px' or '%'; defaults to 'px'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Point.xunit",
								"id": 73
							}
						},
						{
							"id": 84,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "y-viewbox value of the point"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 11,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Point.y",
								"id": 72
							}
						},
						{
							"id": 86,
							"name": "yunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "viewbox unit to use for y coordinate. Allowed values are 'px' or '%'; defaults to 'px'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Point.yunit",
								"id": 74
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								79,
								81,
								80,
								82,
								83,
								85,
								84,
								86
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 30,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Point",
							"id": 70
						}
					]
				},
				{
					"id": 70,
					"name": "Point",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "svg primitive Point, measured in viewbox coordinates."
					},
					"children": [
						{
							"id": 71,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "x-viewbox value of the point"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 9,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 73,
							"name": "xunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "viewbox unit to use for x coordinate. Allowed values are 'px' or '%'; defaults to 'px'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 72,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "y-viewbox value of the point"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 11,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 74,
							"name": "yunit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "viewbox unit to use for y coordinate. Allowed values are 'px' or '%'; defaults to 'px'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								71,
								73,
								72,
								74
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 7,
							"character": 22
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ExtendedPoint",
							"id": 78
						}
					]
				},
				{
					"id": 75,
					"name": "Rect",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "svg primitive Rect, measured in viewbox coordinates."
					},
					"children": [
						{
							"id": 77,
							"name": "br",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "bottom right point"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 23,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Point",
								"id": 70
							}
						},
						{
							"id": 76,
							"name": "tl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "top left point"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 21,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Point",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								77,
								76
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 19,
							"character": 21
						}
					]
				},
				{
					"id": 92,
					"name": "TextElem",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 94,
							"name": "cssClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a css class to set"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 50,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 100,
							"name": "hOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "horizontal label offset in 'em'; uses `dx` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 68,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 95,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a style to set"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 53,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 93,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the text to show"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 101,
							"name": "vOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "vertical label offset in 'em'; uses `dy` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 71,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 96,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional absolute x positioning on the canvas, e.g. '50%'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 56,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 98,
							"name": "xpos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "horizontal align: 'start' | 'middle' | 'end'; uses `text-align` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "TextHAlign",
								"id": 102
							}
						},
						{
							"id": 97,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional absolute y positioning on the canvas, e.g. '50%'"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 59,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 99,
							"name": "ypos",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "vertical align: 'top' | 'center' | 'bottom'; uses `dy` attribute"
							},
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 65,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "TextVAlign",
								"id": 106
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								94,
								100,
								95,
								93,
								101,
								96,
								98,
								97,
								99
							]
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 45,
							"character": 25
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "LabelCfg",
							"id": 1260
						}
					]
				},
				{
					"id": 178,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 2,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 177,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 1,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				},
				{
					"id": 179,
					"name": "round",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 180,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 181,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "SVGElem.ts",
							"line": 74,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						102,
						106
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						110
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						87,
						78,
						70,
						75,
						92
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						178
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						177
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						179
					]
				}
			],
			"sources": [
				{
					"fileName": "SVGElem.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"Scale\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Scale.ts",
			"comment": {
				"tags": [
					{
						"tag": "module",
						"text": "Axes\n"
					}
				]
			},
			"children": [
				{
					"id": 2,
					"name": "Scale",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "translates a domain into a range"
					},
					"children": [
						{
							"id": 9,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 11,
									"name": "new Scale",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 12,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScaleCfg",
												"id": 1429
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 2
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 157,
									"character": 28
								}
							]
						},
						{
							"id": 10,
							"name": "cfg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 159,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleCfg",
								"id": 1429
							}
						},
						{
							"id": 7,
							"name": "domMaxAuto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 156,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 6,
							"name": "domMinAuto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 155,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 5,
							"name": "domVal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 154,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Domain"
							},
							"defaultValue": " [0,1]"
						},
						{
							"id": 8,
							"name": "labelFmt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 157,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "rangeVal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 153,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NumRange"
							},
							"defaultValue": " [0,1]"
						},
						{
							"id": 3,
							"name": "typeVal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Defines default values for all configurable parameters"
							},
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 152,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " Axes.type.linear"
						},
						{
							"id": 31,
							"name": "convert",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 32,
									"name": "convert",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "converts a domain value to a range value"
									},
									"parameters": [
										{
											"id": 33,
											"name": "domVal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 260,
									"character": 11
								}
							]
						},
						{
							"id": 19,
							"name": "domain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 20,
									"name": "domain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 21,
											"name": "dom",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Domain"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Domain"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 174,
									"character": 17
								}
							]
						},
						{
							"id": 16,
							"name": "range",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 17,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 18,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "NumRange"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NumRange"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 168,
									"character": 16
								}
							]
						},
						{
							"id": 22,
							"name": "scaleType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 23,
									"name": "scaleType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 24,
											"name": "s",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 202,
									"character": 20
								}
							]
						},
						{
							"id": 25,
							"name": "setAutoDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 26,
									"name": "setAutoDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If a `domain` limit is set to `auto`, calling this function tells the `Scale`\nwhat the values of the min or max of the data set in the `domain` range are.\nThese will be rounded down (for min) and up (for max) to determine the auto-range."
									},
									"parameters": [
										{
											"id": 27,
											"name": "dom",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the `[min,max]` range of the data\n"
											},
											"type": {
												"type": "reference",
												"name": "NumRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 215,
									"character": 24
								}
							]
						},
						{
							"id": 13,
							"name": "setLabelFormat",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 14,
									"name": "setLabelFormat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 15,
											"name": "labelFmt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 164,
									"character": 25
								}
							]
						},
						{
							"id": 28,
							"name": "ticks",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 29,
									"name": "ticks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Calculates major and minor tick marks in domain coordinates"
									},
									"parameters": [
										{
											"id": 30,
											"name": "numTicks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "4"
										}
									],
									"type": {
										"type": "reference",
										"name": "Ticks",
										"id": 1432
									}
								}
							],
							"sources": [
								{
									"fileName": "Scale.ts",
									"line": 230,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								9
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								10,
								7,
								6,
								5,
								8,
								4,
								3
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								31,
								19,
								16,
								22,
								25,
								13,
								28
							]
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 150,
							"character": 18
						}
					]
				},
				{
					"id": 57,
					"name": "tickCategories",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 76,
							"character": 20
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					},
					"defaultValue": " [\n    [10,0,0,0], [5,0,0,0], [2,0,0,0], [1,0,0,0], [0,6,0,0], [0,3,0,0], [0,1,0,0], [0,0,7,0], [0,0,1,0], [0,0,0,4], [0,0,0,1]\n]"
				},
				{
					"id": 38,
					"name": "addTickDate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 39,
							"name": "addTickDate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 40,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TickDefs",
										"id": 1438
									}
								},
								{
									"id": 41,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 42,
									"name": "fmt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 20,
							"character": 20
						}
					]
				},
				{
					"id": 34,
					"name": "addTickNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 35,
							"name": "addTickNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 36,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TickDefs",
										"id": 1438
									}
								},
								{
									"id": 37,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 16,
							"character": 22
						}
					]
				},
				{
					"id": 63,
					"name": "createTickLabels",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 64,
							"name": "createTickLabels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "calculates major tick label domain values"
							},
							"parameters": [
								{
									"id": 65,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 66,
									"name": "domain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Domain"
									}
								},
								{
									"id": 67,
									"name": "numTicks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 68,
									"name": "fmt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Ticks",
								"id": 1432
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 123,
							"character": 25
						}
					]
				},
				{
					"id": 58,
					"name": "dateScaleTickMarks",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 59,
							"name": "dateScaleTickMarks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 60,
									"name": "dom",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Domain"
									}
								},
								{
									"id": 61,
									"name": "ticks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Ticks",
										"id": 1432
									}
								},
								{
									"id": 62,
									"name": "fmt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"%MM/%DD/%YY\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 80,
							"character": 27
						}
					]
				},
				{
					"id": 43,
					"name": "linScaleTickMarks",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 44,
							"name": "linScaleTickMarks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "calculate major and minor ticks on a lionear scale. The first and last tick will be smaller and larger than the provided domain."
							},
							"parameters": [
								{
									"id": 45,
									"name": "dom",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumRange"
									}
								},
								{
									"id": 46,
									"name": "ticks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Ticks",
										"id": 1432
									}
								},
								{
									"id": 47,
									"name": "numTicks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 26,
							"character": 26
						}
					]
				},
				{
					"id": 53,
					"name": "logScaleTickMarks",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 54,
							"name": "logScaleTickMarks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 55,
									"name": "dom",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumRange"
									}
								},
								{
									"id": 56,
									"name": "ticks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Ticks",
										"id": 1432
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 47,
							"character": 26
						}
					]
				},
				{
					"id": 48,
					"name": "percentScaleTickMarks",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 49,
							"name": "percentScaleTickMarks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 50,
									"name": "dom",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NumRange"
									}
								},
								{
									"id": 51,
									"name": "ticks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Ticks",
										"id": 1432
									}
								},
								{
									"id": 52,
									"name": "numTicks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Scale.ts",
							"line": 39,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						57
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						38,
						34,
						63,
						58,
						43,
						53,
						48
					]
				}
			],
			"sources": [
				{
					"fileName": "Scale.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 869,
			"name": "\"Series\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/Series.ts",
			"comment": {
				"shortText": "# Series\nrenders the one or more series in a variety of styles.",
				"text": "### Configurations and Defaults\nSee {@link Series.Series.defaultConfig Series.defaultConfig} for defaults\nand {@link Series.SeriesDef SeriesDef} for defining configuration details.\n\n### Attributes\nThe `Series` class is called by {@link Graph.Graph `Graph`} as\n`m(Series, { cfg:cfg.series, scales:scales, data:this.data })`\nwith the following attributes:\n- cfg: {@link Series.SeriesConfig `SeriesConfig`} configuration parameters for series\n- scales: {@link Axes.XYScale `XYScale`} the scales to use\n- data: {@link hsdatab:Data.Data `Data`} array of `Data` sets to use, indexed by cfg[].dataIndex\n",
				"tags": [
					{
						"tag": "module",
						"text": "Series\n"
					}
				]
			},
			"children": [
				{
					"id": 870,
					"name": "Series",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 906,
							"name": "defaultColors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "determines the default color for the first couple of series"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 99,
									"character": 31
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " ['#f00', '#0f0', '#00f', '#ff0', '#0ff', '#f0f', '#000', '#444', '#888', '#ccc']"
						},
						{
							"id": 930,
							"name": "circle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 931,
									"name": "circle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a circle around the center domain point `c`, with radius `r`"
									},
									"parameters": [
										{
											"id": 932,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's center point in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 933,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the circle's radius, in domain coordinates"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 934,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 935,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.circle",
										"id": 121
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 156,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.circle",
								"id": 121
							}
						},
						{
							"id": 936,
							"name": "clipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 937,
									"name": "clipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a clip rect to apply to other elelements via the `id`"
									},
									"parameters": [
										{
											"id": 938,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "top-left corner of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 939,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "width and height of the `clipRect` in domain coordinates"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 940,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a unique clip id to reference the `clipRect` by\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.clipRect",
										"id": 127
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 169,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.clipRect",
								"id": 127
							}
						},
						{
							"id": 913,
							"name": "drawClipRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 914,
									"name": "drawClipRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 915,
											"name": "clipID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 916,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 166,
									"character": 16
								}
							]
						},
						{
							"id": 948,
							"name": "horLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 949,
									"name": "horLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a horizontal line from `x0/y` to `x1/y`."
									},
									"parameters": [
										{
											"id": 950,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 951,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 952,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 953,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.horLine",
										"id": 139
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 205,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.horLine",
								"id": 139
							}
						},
						{
							"id": 941,
							"name": "line",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 942,
									"name": "line",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a straight line from `x0/y0` to `x1/y1`."
									},
									"parameters": [
										{
											"id": 943,
											"name": "x0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 944,
											"name": "x1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 945,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 946,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 947,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.line",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 189,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.line",
								"id": 132
							}
						},
						{
							"id": 969,
							"name": "polygon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 970,
									"name": "polygon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polygon from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 971,
											"name": "dataFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 972,
											"name": "dataBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 973,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 974,
											"name": "yFore",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 975,
											"name": "yBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 976,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 977,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 978,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 979,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polygon",
										"id": 160
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 263,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polygon",
								"id": 160
							}
						},
						{
							"id": 960,
							"name": "polyline",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 961,
									"name": "polyline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a polyline from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 962,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an array of rows; each row is an array of data. The first row contains the\nseries names and will be skipped."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 963,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as x coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 964,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the index in each row to use as y coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 965,
											"name": "scales",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the scales to use to convert coordinates into range values"
											},
											"type": {
												"type": "reference",
												"name": "XYScale",
												"id": 1423
											}
										},
										{
											"id": 966,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 967,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 968,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.polyline",
										"id": 151
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 242,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.polyline",
								"id": 151
							}
						},
						{
							"id": 924,
							"name": "rect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 925,
									"name": "rect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot a rectangle in domain coordinates"
									},
									"parameters": [
										{
											"id": 926,
											"name": "tl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the top-left corner of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Point",
												"id": 70
											}
										},
										{
											"id": 927,
											"name": "area",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the width and height of the rect"
											},
											"type": {
												"type": "reference",
												"name": "Area",
												"id": 87
											}
										},
										{
											"id": 928,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "optional css style setting, such as stroke or stroke-width\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 929,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.rect",
										"id": 115
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 132,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.rect",
								"id": 115
							}
						},
						{
							"id": 980,
							"name": "shape",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 981,
									"name": "shape",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a shape from points in `data`. `x` and `y` are the indices to reference\nthe data for the x-axis, respectively the y-axis in each row in `data`. That is,\nplot `data[row][x] / data[row][y]` for all rows."
									},
									"parameters": [
										{
											"id": 982,
											"name": "points",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "DataRow"
												}
											}
										},
										{
											"id": 983,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the unique clip-path id to use, or undefined"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 984,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "an optional `style` attribute, e.g. to set the stroke and stroke-width.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 985,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.shape",
										"id": 171
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 289,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.shape",
								"id": 171
							}
						},
						{
							"id": 920,
							"name": "text",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 921,
									"name": "text",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plot some text"
									},
									"parameters": [
										{
											"id": 922,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "configures the text alignment and positioning"
											},
											"type": {
												"type": "reference",
												"name": "TextElem",
												"id": 92
											}
										},
										{
											"id": 923,
											"name": "text",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the text to plot\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.text",
										"id": 111
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 100,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.text",
								"id": 111
							}
						},
						{
							"id": 954,
							"name": "verLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 955,
									"name": "verLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "plots a vertical line from `x/y0` to `x/y1`."
									},
									"parameters": [
										{
											"id": 956,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting and ending point x domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 957,
											"name": "y0",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "starting point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 958,
											"name": "y1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "ending point y domain coordinate"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 959,
											"name": "cssClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional css class attribute\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "SVGElem.verLine",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "SVGElem.ts",
									"line": 221,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "SVGElem.verLine",
								"id": 145
							}
						},
						{
							"id": 917,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 918,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 919,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode",
												"id": 1037
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode",
										"id": 1037
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 176,
									"character": 8
								}
							]
						},
						{
							"id": 910,
							"name": "adjustConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 911,
									"name": "adjustConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Makes adjustments to cfg based on current settings"
									},
									"parameters": [
										{
											"id": 912,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all components\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 156,
									"character": 23
								}
							]
						},
						{
							"id": 907,
							"name": "defaultConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 908,
									"name": "defaultConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Defines default values for all configurable parameters in `Series`\nSee {@link Graph.Graph.makeConfig Graph.makeConfig} for the sequence of initializations.",
										"text": "### Configurations and Defaults\n```\n cfg.series = {@link Series.SeriesConfig <SeriesConfig>}{\n         // pool of `Data` sets to be plotted, initialized as `[]`\n     data: {@link hsdatab:Data.DataSet <DataSet[]>},\n         // series an markers are clipped to the plot area\n     clip: true,\n         // array of series descriptors, initialized to empty array (no series)\n     series: {@link Series.SeriesDef <SeriesDef>}[]\n }\n\n// sets the default colors that will be assigend to series by index\nSeries.defaultColors:\n         ['#f00', '#0f0', '#00f', '#ff0', '#0ff', '#f0f', '#000', '#444', '#888', '#ccc'];\n\n// sets the default style to be applied to series\nSeries.defaultStyle: {@link Series.SeriesStyle <SeriesStyle>} {\n         line:   {\n             color: <color>, // the line color to use, preset from defaultColors\n             width: 5,       // the line width in viewbox units\n             visible: true   // whether line is draw or not\n         },\n         marker: {\n             color: <color>, // the marker color to use, preset from defaultColors\n             size: 10,       // the marker size in viewbox coordinates\n             shape: Series.marker.circle, // the marker shaper, See {@link Series.Series.marker Series.marker}\n             visible: true\n         },\n         fill: {\n             color: <color>, // the fill color to use, preset from defaultColors\n             visible: true\n         },\n         bar: {\n             color: <color>, // the bar color to use, preset from defaultColors\n             width: 50,\n             offset: 30,\n             visible: false\n         }\n     }\n```"
									},
									"parameters": [
										{
											"id": 909,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the configuration object, containing default settings for all\npreviously configured components.\n"
											},
											"type": {
												"type": "reference",
												"name": "Config",
												"id": 1272
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 148,
									"character": 24
								}
							]
						},
						{
							"id": 885,
							"name": "defaultStyle",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "determines the default style applied to each series.\nColors will be chosen by series index from `defaultColors`."
							},
							"children": [
								{
									"id": 901,
									"name": "bar",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 902,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 95,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"default\""
										},
										{
											"id": 905,
											"name": "offset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 95,
													"character": 68
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "30"
										},
										{
											"id": 903,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 95,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "false"
											},
											"defaultValue": "false"
										},
										{
											"id": 904,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 95,
													"character": 56
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "50"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												902,
												905,
												903,
												904
											]
										}
									],
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 95,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 898,
									"name": "fill",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 899,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 94,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"default\""
										},
										{
											"id": 900,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 94,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "false"
											},
											"defaultValue": "false"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												899,
												900
											]
										}
									],
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 94,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 895,
									"name": "label",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 896,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 93,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"default\""
										},
										{
											"id": 897,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 93,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "false"
											},
											"defaultValue": "false"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												896,
												897
											]
										}
									],
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 93,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 886,
									"name": "line",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 887,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 91,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"default\""
										},
										{
											"id": 888,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 91,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "true"
											},
											"defaultValue": "true"
										},
										{
											"id": 889,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 91,
													"character": 55
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												887,
												888,
												889
											]
										}
									],
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 91,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 890,
									"name": "marker",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 891,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 92,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"default\""
										},
										{
											"id": 894,
											"name": "shape",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 92,
													"character": 66
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											},
											"defaultValue": " Series.marker.circle"
										},
										{
											"id": 893,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 92,
													"character": 55
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "10"
										},
										{
											"id": 892,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Series.ts",
													"line": 92,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "false"
											},
											"defaultValue": "false"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												891,
												894,
												893,
												892
											]
										}
									],
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 92,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										901,
										898,
										895,
										886,
										890
									]
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 90,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 882,
							"name": "map",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 884,
									"name": "shared",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 83,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"shared\""
								},
								{
									"id": 883,
									"name": "stacked",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 82,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"stacked\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										884,
										883
									]
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 81,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 871,
							"name": "marker",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Defines available styles for series marker:\n- circle\n- square\n- diamond\n- upTriangle\n- downTriangle"
							},
							"children": [
								{
									"id": 872,
									"name": "circle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 62,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"defaultValue": "         Symbol('circle marker')"
								},
								{
									"id": 874,
									"name": "diamond",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 64,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"defaultValue": "        Symbol('diamond marker')"
								},
								{
									"id": 876,
									"name": "downTriangle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 66,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"defaultValue": "   Symbol('downward triangle marker')"
								},
								{
									"id": 873,
									"name": "square",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 63,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"defaultValue": "         Symbol('square marker')"
								},
								{
									"id": 875,
									"name": "upTriangle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 65,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"defaultValue": "     Symbol('upward triangle marker')"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										872,
										874,
										876,
										873,
										875
									]
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 61,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 877,
							"name": "plot",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Defines available plot types:\n- line\n- bar"
							},
							"children": [
								{
									"id": 881,
									"name": "area",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 78,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "PlotArea",
										"id": 751
									},
									"defaultValue": "    new PlotArea()"
								},
								{
									"id": 880,
									"name": "bar",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 77,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "PlotBar",
										"id": 622
									},
									"defaultValue": "     new PlotBar()"
								},
								{
									"id": 878,
									"name": "line",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 75,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "PlotLine",
										"id": 384
									},
									"defaultValue": "    new PlotLine()"
								},
								{
									"id": 879,
									"name": "marker",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Series.ts",
											"line": 76,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "PlotMarkers",
										"id": 503
									},
									"defaultValue": "  new PlotMarkers()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										881,
										880,
										878,
										879
									]
								}
							],
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 74,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								906
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								930,
								936,
								913,
								948,
								941,
								969,
								960,
								924,
								980,
								920,
								954,
								917,
								910,
								907
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								885,
								882,
								871,
								877
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 52,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "SVGElem",
							"id": 110
						}
					]
				},
				{
					"id": 1028,
					"name": "SeriesConfig",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the default settings.\nImplemented as a class rather than interface to allow for a getter/setter implementation\nof `series`. This allows for postprocessing user configurations while maintaining\nconvenient notation, e.g.\n```\n cfg.series.series = [           // invoke the setter\n     { x:'time', y:'volume'},    // behind the scenes, adds\n     { x:'time', y:'price']}     // missing fields such as .style\n ];\n fg.series.series[0].style.marker.visible = true;    // invoke the getter\n```"
					},
					"children": [
						{
							"id": 1031,
							"name": "clip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "determines if seires plot will be clipped to the chart area"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 330,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 1030,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "the `DataSet`s to be used for plots.\nEach set describes the column names and the rows-of-columns data.\nThe `SeriesDef.dataIndex` determines which set to use."
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 327,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "DataSet"
								}
							}
						},
						{
							"id": 1029,
							"name": "seriesDefs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 320,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SeriesDef",
									"id": 1015
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1032,
							"name": "series",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "`series` accessor method: array of series definitions to define plots."
							},
							"getSignature": {
								"id": 1035,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "`series` accessor method: array of series definitions to define plots."
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "SeriesDef",
										"id": 1015
									}
								}
							},
							"setSignature": {
								"id": 1033,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "`series` accessor method: array of series definitions to define plots."
								},
								"parameters": [
									{
										"id": 1034,
										"name": "cfg",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"name": "SeriesDef",
												"id": 1015
											}
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 336,
									"character": 21
								},
								{
									"fileName": "Series.ts",
									"line": 364,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1031,
								1030,
								1029
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1032
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 319,
							"character": 25
						}
					]
				},
				{
					"id": 1004,
					"name": "BarStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1007,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the color in hex"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 220,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ColoredCfg.color",
								"id": 987
							}
						},
						{
							"id": 1006,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "offset between column series in % between bars"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 246,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1008,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						},
						{
							"id": 1005,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "width of bars in % of space between bars"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 243,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1007,
								1006,
								1008,
								1005
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 241,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ColoredCfg",
							"id": 986
						}
					]
				},
				{
					"id": 986,
					"name": "ColoredCfg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 987,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the color in hex"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 220,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 988,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								987,
								988
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 218,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "VisibleCfg",
							"id": 1258
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "LineStyle",
							"id": 989
						},
						{
							"type": "reference",
							"name": "MarkerStyle",
							"id": 993
						},
						{
							"type": "reference",
							"name": "FillStyle",
							"id": 998
						},
						{
							"type": "reference",
							"name": "TextStyle",
							"id": 1001
						},
						{
							"type": "reference",
							"name": "BarStyle",
							"id": 1004
						}
					]
				},
				{
					"id": 998,
					"name": "FillStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 999,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the color in hex"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 220,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ColoredCfg.color",
								"id": 987
							}
						},
						{
							"id": 1000,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								999,
								1000
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 235,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ColoredCfg",
							"id": 986
						}
					]
				},
				{
					"id": 989,
					"name": "LineStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 991,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the color in hex"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 220,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ColoredCfg.color",
								"id": 987
							}
						},
						{
							"id": 992,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						},
						{
							"id": 990,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the stroke width in px"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 224,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								991,
								992,
								990
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 222,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ColoredCfg",
							"id": 986
						}
					]
				},
				{
					"id": 993,
					"name": "MarkerStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 996,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the color in hex"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 220,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ColoredCfg.color",
								"id": 987
							}
						},
						{
							"id": 995,
							"name": "shape",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the marker shape, selected from {@link Series.Series.marker Series.marker}"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 232,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Symbol"
							}
						},
						{
							"id": 994,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the stroke width in px"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 229,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 997,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								996,
								995,
								994,
								997
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 227,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ColoredCfg",
							"id": 986
						}
					]
				},
				{
					"id": 1015,
					"name": "SeriesDef",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines Series columns and values to use, as well as the plot type to apply.\nThe following settings are available for configuration:\n```\ncfg.series.series = [{\n   type: TYPE,        // the series type, e.g. 'line', etc. See below.\n   dataIndex: number, // the `Data` set to use. The index refers to the position in `series.data`\n   x: string,         // the column name or index of the x-coordinate to use for drawing\n   y: string,         // the column name or index of the y-coordinate to use for drawing\n   yBase: string,     // if specified, used as lower series for filling the area\n   l: string,         // the column name or index to use for series labels\n   hOffset: number;   // horizontal label offset in em o\n   vOffset?: number;  // vertical label offset in em\n   map?: 'stacked' | 'shared'; // stack series, or show the share (normalize to 100%)\n   style: {@link Series.SeriesStyle SeriesStyle},  // allows overriding a default style setting\n   cond: {@link hsdatab:DataFilters.Condition Condition} // allows specifying a filter applied to data before rendering.\n}]\n```\nThe following series *TYPE*s are available. For configuration details, see:\n- 'line':  (or omitted): {@link PlotLine PlotLine}\n- 'markers': {@link PlotMarkers PlotMarkers}\n- 'area':    {@link PlotArea PlotArea}\n- 'bar':     {@link PlotBar PlotBar}"
					},
					"children": [
						{
							"id": 1027,
							"name": "cond",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optinal filter condition on the data prior to drawing"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 302,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Condition"
							}
						},
						{
							"id": 1024,
							"name": "dataIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An index into the `Data[]` pool, identifying the `Data` set to use. defaults to `0`"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 296,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1021,
							"name": "hOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 292,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1020,
							"name": "l",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 291,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1023,
							"name": "map",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 294,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1026,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "style information to use for plotting; if ommitted, a `type`-dependent default is used"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 300,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "SeriesStyle",
								"id": 1009
							}
						},
						{
							"id": 1025,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional plot type, selected from {@link Series.Series.plot Series.plot} as string; defaults to  'line'"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 298,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1022,
							"name": "vOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 293,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1016,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "required column names or indices.\n[0] is reserved for the x direction.\nFurther elements are dependent on the {@link Series.type plot} type."
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 287,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1017,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 288,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1018,
							"name": "yBase",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 289,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1019,
							"name": "ySum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 290,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1027,
								1024,
								1021,
								1020,
								1023,
								1026,
								1025,
								1022,
								1016,
								1017,
								1018,
								1019
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 281,
							"character": 26
						}
					]
				},
				{
					"id": 1009,
					"name": "SeriesStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1013,
							"name": "bar",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 253,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BarStyle",
								"id": 1004
							}
						},
						{
							"id": 1012,
							"name": "fill",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 252,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "FillStyle",
								"id": 998
							}
						},
						{
							"id": 1014,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 254,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TextStyle",
								"id": 1001
							}
						},
						{
							"id": 1010,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 250,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "LineStyle",
								"id": 989
							}
						},
						{
							"id": 1011,
							"name": "marker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 251,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "MarkerStyle",
								"id": 993
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1013,
								1012,
								1014,
								1010,
								1011
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 249,
							"character": 28
						}
					]
				},
				{
					"id": 1001,
					"name": "TextStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1002,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the color in hex"
							},
							"sources": [
								{
									"fileName": "Series.ts",
									"line": 220,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ColoredCfg.color",
								"id": 987
							}
						},
						{
							"id": 1003,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Graph.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "VisibleCfg.visible",
								"id": 1259
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1002,
								1003
							]
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 238,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ColoredCfg",
							"id": 986
						}
					]
				},
				{
					"id": 1037,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 22,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1036,
					"name": "m",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 21,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require(\"mithril\")"
				},
				{
					"id": 1038,
					"name": "copyDefault",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1039,
							"name": "copyDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1040,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1041,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1042,
									"name": "defaults",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Series.ts",
							"line": 37,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						870,
						1028
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1004,
						986,
						998,
						989,
						993,
						1015,
						1009,
						1001
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1037
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1036
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1038
					]
				}
			],
			"sources": [
				{
					"fileName": "Series.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1594,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1595,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsGraph/src/overview.ts",
			"comment": {
				"shortText": "# hsGraph",
				"text": "Helpful Scripts Graph plotting functions.\n[`[Github page]`](https://github.com/HelpfulScripts/hsGraph)\n[`[Coverage Info]`](./data/src/hsGraph/coverage/)\n___\n\nhsGraph is a simple graphing utility written in JavaScript and based on the [Mithril](https://mithril.js.org) framework.\nIt supports various chart types and scales and provides a convenient programmatic configuration mechanism.\n\n## Usage\nIn mithril, simply render or mount a {@link Graph Graph} Component object and provide a `cfg`\nattribute with the graph's configuration.\n\n## Setting the data to render\nData is provided in a rows-of-columns style array: `data[row][column]`.\nThe first row in the data array contains column names by which the series can be identified.\nThere is no conceptual limit to the number of rows or columns provided to `hsGraph`.\nIn the configuration,\n- set the array containing the data: `series.data = data;`\n- and specify the x- and y-columns to render, by name: `series.series = [{xHeader:<string>, yHeader:<string>}]`\n\n## Configuration\nAll graph components are highly configurable. `hsGraph` uses default values for all configurable fields\nthat can easily be changed, either programmatically or via a custom stylesheet.\n\nThere are two ways to programmatically set rendering parameters.\n1. change the deafult configuration style or color. This will change the default for all\nsubsequently drawn graphs\n```\nhsgraph.Series.defaultStyle.line.width  = 10;\n```\n2. provide a configuration function `cfg => {}` to the `cfgFn` attribute\nwhen setting up the mithril mount call - see example below. The `cfgFn`\nreceives a configuration object that is fully initialized with default values,\nand should overwrite parameters as needed. See the overview for each component\nfor configurable parameters. Example:\n```\ncfg => {\n    ...\n    cfg.series.series[0].style.line.width = 10;\n}\n```\n\n\n\nAvailable configuration options and their default settings are documented in:\n- &nbsp; {@link Graph.Graph.defaultConfig Graph.defaultConfig }\n- &nbsp; {@link Canvas.Canvas.defaultConfig Canvas.defaultConfig}\n- &nbsp; {@link Chart.Chart.defaultConfig Chart.defaultConfig}\n- &nbsp; {@link Axes.Axes.defaultConfig Axes.defaultConfig}\n- &nbsp; {@link Grid.Grid.defaultConfig Grid.defaultConfig}\n- &nbsp; {@link Series.Series.defaultConfig Series.defaultConfig}\n- &nbsp; {@link Legend.Legend.defaultConfig Legend.defaultConfig}\n\n## Graph Components\nThe rendered graph is organized in a layered structure of components:\n- &nbsp; {@link Canvas Canvas}:  the background canvas on which all components are rendered\n- &nbsp; {@link Chart Chart}: the chart area and title\n- &nbsp; {@link Axes Axes}: the x- and y-axes, tick marks and labels, and axis title\n- &nbsp; {@link Grid Grid}: the major and minor gridlines\n- &nbsp; {@link Series Series}: the one or more data series to render\n- &nbsp; {@link Legend Legend}: the legend for the shown series\n\n## Supported Plot Types\n<example height=640px>\n<file name='script.js'>\nlet series = {\n   colNames:['time', 'volume', 'costs'],\n   rows:[[-1,  0.2, 0.3], [0.2, 0.7, 0.2], [0.4, 0.1, 0.3],\n         [0.6, 0,   0.1], [0.8, 0.3, 0.5], [1,   0.2, 0.4]]};\n\nconst plot = (type, link) => m(hslayout.Layout, {\n   rows: ['40px', 'fill'],\n   content: [\n      m('h4', [m('a', {href:`#!/api/hsGraph/hsGraph.${link}`}, `${type} plot:`)]),\n      m(hsgraph.Graph, {cfgFn: cfg => {\n         cfg.axes.primary.x.title.text = 'time';\n         cfg.series.data      = [series];\n         cfg.series.series    = [\n             { x:'time', y:'volume', type:type },\n             { x:'time', y:'costs', type:type }\n         ];\n      }}),\n]});\n\nhsgraph.Series.defaultStyle.line.width = 6;\nhsgraph.Series.defaultStyle.bar.width  = 20;\nhsgraph.Series.defaultStyle.bar.offset = 25;\nhsgraph.Series.defaultColors[0] = 'rgba(255, 0, 0, 0.5)';\nhsgraph.Series.defaultColors[1] = 'rgba(0, 255, 0, 0.5)';\n\nm.mount(root, { view:() => m('.hs-white', m(hslayout.Layout, {\n   rows: [], content: [\n      plot('marker', 'PlotMarkers'),\n      plot('line',   'PlotLine'),\n      plot('area',   'PlotArea'),\n      plot('bar',    'PlotBar')\n]}))});\n</file>\n<file name='style.css'>\n</file>\n</example>\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1466,
				1422,
				182,
				1043,
				1257,
				1140,
				1243,
				264,
				750,
				621,
				383,
				502,
				69,
				1,
				869,
				1594,
				1595
			]
		}
	]
}