{
	"id": 0,
	"name": "hsDocs",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"DocSets\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/DocSets.ts",
			"comment": {
				"shortText": "DocSets.ts. Loads the doc.json files to process and display as documentation.\nProcessing occurs in these steps:\n1. Load the index.json file that contains a list of doc.json files to load, one for each library to show\n2. Load each doc.json file, which describes a library\n3. Call DocSets.add to add the library name to the registry and create an index of entries for the library"
			},
			"children": [
				{
					"id": 2,
					"name": "DocSets",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "DocSets object. Keeps a list of registered docsets and\nprovides access to elements of each docset."
					},
					"children": [
						{
							"id": 3,
							"name": "gList",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Contains references to the docsets and all elements per docset, accessible per ID."
							},
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 37,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 7,
											"name": "docs",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "DocSets.ts",
													"line": 37,
													"character": 57
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 6,
											"name": "index",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "DocSets.ts",
													"line": 37,
													"character": 48
												}
											],
											"type": {
												"type": "reference",
												"name": "__type"
											}
										},
										{
											"id": 5,
											"name": "set",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "DocSets.ts",
													"line": 37,
													"character": 32
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												7,
												6,
												5
											]
										}
									]
								}
							},
							"defaultValue": " <{set:string[], index:{}, docs:string[]}>{set:<string[]>[], index:{}, docs:<string[]>[]}"
						},
						{
							"id": 8,
							"name": "gTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 38,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 10,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds the docset in `content` to the `gList` at the position of `file` in `DocSets.gList.docs`."
									},
									"parameters": [
										{
											"id": 11,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the docSet content to add."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 12,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the file name from which the content was read.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 45,
									"character": 21
								}
							]
						},
						{
							"id": 16,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 17,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns the specified documentation element.\nWhen called without parameters, a `string[lib]` of available docSets is returned.\nWhen called with only `lib` specified, the corresponding docSet overview is returned."
									},
									"parameters": [
										{
											"id": 18,
											"name": "lib",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "specifies the docset to scan."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 19,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "specifies the element within the docSet, either by its id number, or by its fully qualified path,\ne.g. 'hsDocs.DocSets.DocSets.add'\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 115,
									"character": 21
								}
							]
						},
						{
							"id": 13,
							"name": "loadList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 14,
									"name": "loadList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "loads an index set and the docsets it contains from driectory `dir`.",
										"returns": "a promise to load the index set\n"
									},
									"parameters": [
										{
											"id": 15,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the optional directory to read from. If unspecified,\nread from the index file specified by {@link DocSets.FILE `FILE`}."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "DocSets.ts",
									"line": 59,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3,
								8
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								9,
								16,
								13
							]
						}
					],
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 35,
							"character": 20
						}
					]
				},
				{
					"id": 21,
					"name": "DOCDIR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"./data/\""
				},
				{
					"id": 22,
					"name": "FILE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "the default location for the index .json files, relative to the web page:\n`'./data/index.json'`"
					},
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 19,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"./data/index.json\""
				},
				{
					"id": 20,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 11,
							"character": 48
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('DocsSets')"
				},
				{
					"id": 27,
					"name": "loadDocSet",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 28,
							"name": "loadDocSet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Loads a docset specified by file from the directory `dir`.\nOnce received, the docset is registered in `modules` via the `add` method."
							},
							"parameters": [
								{
									"id": 29,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the directory to read from"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the `json` file to load as docset\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 128,
							"character": 25
						}
					]
				},
				{
					"id": 23,
					"name": "matchAll",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 24,
							"name": "matchAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 25,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26,
									"name": "re",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RegExp"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 21,
							"character": 17
						}
					]
				},
				{
					"id": 31,
					"name": "recursiveIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 32,
							"name": "recursiveIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "recurses through the docset and registers all `children` entries of an entry by id,\nstarting with the root entry."
							},
							"parameters": [
								{
									"id": 33,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the docset object literal to traverse"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 34,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the index in which to register the entries"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 35,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the docset name, used for name validation\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 36,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "DocSets.ts",
							"line": 141,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						21,
						22,
						20
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						27,
						23,
						31
					]
				}
			],
			"sources": [
				{
					"fileName": "DocSets.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 289,
			"name": "\"Site\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/Site.ts",
			"comment": {
				"shortText": "Site documentation"
			},
			"children": [
				{
					"id": 291,
					"name": "FooterHeight",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 15,
							"character": 18
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "10px"
					},
					"defaultValue": "\"10px\""
				},
				{
					"id": 292,
					"name": "LeftNavWidth",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 16,
							"character": 18
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "200px"
					},
					"defaultValue": "\"200px\""
				},
				{
					"id": 290,
					"name": "TitleHeight",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 14,
							"character": 17
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "30px"
					},
					"defaultValue": "\"30px\""
				},
				{
					"id": 326,
					"name": "init",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 327,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 50,
							"character": 20
						}
					]
				},
				{
					"id": 293,
					"name": "myConfig2",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 304,
							"name": "body",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 305,
									"name": "Layout",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 306,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 30,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": " [LeftNavWidth, \"fill\"]"
										},
										{
											"id": 307,
											"name": "content",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 31,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": " ['leftnav', 'mainDetail']"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												306,
												307
											]
										}
									],
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 29,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										305
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 29,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 308,
							"name": "footer",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 309,
									"name": "Layout",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 311,
											"name": "content",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 35,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"(c) Helpful Scripts\""
										},
										{
											"id": 310,
											"name": "css",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 34,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\".hs-site-footer\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												311,
												310
											]
										}
									],
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 33,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										309
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 33,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 299,
							"name": "header",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 300,
									"name": "Layout",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 301,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 25,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": " [LeftNavWidth, \"fill\"]"
										},
										{
											"id": 303,
											"name": "content",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 27,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": " ['title', 'menu']"
										},
										{
											"id": 302,
											"name": "css",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 26,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\".hs-site-header\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												301,
												303,
												302
											]
										}
									],
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 24,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										300
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 24,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 320,
							"name": "leftnav",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 321,
									"name": "LeftNav",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 45,
											"character": 24
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 322,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										321
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 45,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 323,
							"name": "mainDetail",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 324,
									"name": "MainDetail",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 46,
											"character": 27
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 325,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										324
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 46,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 317,
							"name": "menu",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 318,
									"name": "DocsMenu",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 319,
											"name": "docSet",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 43,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"./data/index.json\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												319
											]
										}
									],
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 42,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										318
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 294,
							"name": "root",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 295,
									"name": "Layout",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 298,
											"name": "content",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 22,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": " ['header', 'body', 'footer']"
										},
										{
											"id": 297,
											"name": "css",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 21,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\".hs-site-main\""
										},
										{
											"id": 296,
											"name": "rows",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 20,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "  [TitleHeight, \"fill\", FooterHeight]"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												298,
												297,
												296
											]
										}
									],
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 19,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										295
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 19,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 312,
							"name": "title",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 313,
									"name": "Layout",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {},
									"children": [
										{
											"id": 315,
											"name": "content",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 39,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"HSDocs\""
										},
										{
											"id": 314,
											"name": "css",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 38,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\".hs-site-title\""
										},
										{
											"id": 316,
											"name": "href",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Site.ts",
													"line": 40,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"https://github.com/HelpfulScripts/hsDocs\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												315,
												314,
												316
											]
										}
									],
									"sources": [
										{
											"fileName": "Site.ts",
											"line": 37,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										313
									]
								}
							],
							"sources": [
								{
									"fileName": "Site.ts",
									"line": 37,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								304,
								308,
								299,
								320,
								323,
								317,
								294,
								312
							]
						}
					],
					"sources": [
						{
							"fileName": "Site.ts",
							"line": 18,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						291,
						292,
						290
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						326
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						293
					]
				}
			],
			"sources": [
				{
					"fileName": "Site.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 328,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/index.ts",
			"comment": {
				"shortText": "Progam entry point. Initiates loading the docsets and setting up a router structure"
			},
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 136,
			"name": "\"markdown\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/markdown.ts",
			"children": [
				{
					"id": 137,
					"name": "showdown",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "markdown.ts",
							"line": 1,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": " require('showdown')"
				},
				{
					"id": 138,
					"name": "markDown",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 139,
							"name": "markDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "process a markdown comment string and returns the equivalent html syntax.",
								"returns": "the marked down comment\n"
							},
							"parameters": [
								{
									"id": 140,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment to markdown"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 141,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "if true, only the first paragraph is returned"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 142,
									"name": "currentRoute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "current route, defaults to mithril's last route"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " m.route.get()"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "markdown.ts",
							"line": 11,
							"character": 24
						}
					]
				},
				{
					"id": 143,
					"name": "substituteLinks",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 144,
							"name": "substituteLinks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "replaces link statements in the comment with hyperlink references.\nThe format of a link statement is \"{@link *docset*:*path* linked text}\", where\n- *docset* is the name of the docset\n- *path* is the structural path of a component with steps on the path separated by a period,\n   following the pattern *module*.*entity*.*member* with\n    - *module* = the name of the module file\n    - *entity* = [*class* | *function* | *variable*]\n    - *member* = [*method* | *variable*]\n- if *path* is omittied, or is `overview`, the library overview will be shown.",
								"text": "Examples:\n- '{@link hsDocs: Doc Overview}' -> {@link hsDocs: Doc Overview}\n- '{@link hsDocs:DocSets.DocSets.add the `adds` function}' --> {@link hsDocs:DocSets.DocSets.add the `adds` function}\n",
								"returns": "the comment with substituted links\n"
							},
							"parameters": [
								{
									"id": 145,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment in which to replace the links"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 146,
									"name": "currentRoute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the current route - part after #!"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "markdown.ts",
							"line": 47,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						137
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						138,
						143
					]
				}
			],
			"sources": [
				{
					"fileName": "markdown.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 329,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/overview.ts",
			"comment": {
				"shortText": "# hsDocs",
				"text": "Helpful Scripts code documentation viewer.\n[`[Github page]`](https://github.com/HelpfulScripts/hsDocs)\n[`[Coverage Info]`](./data/src/hsDocs/coverage/)\n\n___\nhsDocs.js is a code documentation viewer for [Typescript](https://www.typescriptlang.org) projects.\nIt renders JSON documentation files as created by [typedoc](http://typedoc.org).\n\n## Usage\n1 - Create a web-app directory to serve the docsets from. As an example,\nsee the `docs` folder in this project's [Github page](https://github.com/HelpfulScripts/hsDocs/tree/master/docs),\nwhich serves the [Github IO pages for this project](https://helpfulscripts.github.io/hsDocs/#!/api/hsDocs/0)\n\n2a - Copy the `index.html` file from [Github](https://github.com/HelpfulScripts/hsDocs/tree/master/docs),\nor create a new **`index.html`** as follows. This will use the `GitHub`-hosted version of `hsDocs`:\n```html\n<html>\n<head>\n<link href=\"https://helpfulscripts.github.io/hsDocs/hsDocs.css\" rel=\"stylesheet\" />\n</head>\n<body class='hs-layout-fill'>\n<script src=\"https://helpfulscripts.github.io/hsDocs/hsDocs.min.js\"></script>\n</body>\n</html>\n```\n\n2b - Alternatively you can use a self-hosted hsDocs version. Copy the `hsDocs` runtimes\n(`hsDocs.js`, `hsDocs.min.js`, `hsDocs.css`, `hsDocs.css.map`) from\n[Github](https://github.com/HelpfulScripts/hsDocs/tree/master/docs) into the directory and modify `index.html` as follows:\n```html\n<html>\n<head><link href=\"hsDocs.css\" rel=\"stylesheet\" /></head>\n<body class='hs-layout-fill'>\n<script src=\"./hsDocs.min.js\"></script>\n</body>\n</html>\n```\n\n3 - Create a subdirectory **`data`** and copy the docsets into it, for example **`hsDocs.json`** or your project's `.json` .\nSee below for creating the docset.\n\n4 - Create a list of docsets to render in a new file **`index.json`** inside **`data`**:\n```json\n{\n\"docs\": [\n\"hsDocs.json\",\n...\n],\n\"title\": \"HS Libraries\"   // will be displayed at the top left corner\n}\n```\n\n5 - optioonally, create a `src` folder inside the `data` folder and copy the `html`-ified source files into it.\nThese are created by the command `grunt sourceCode` in the `docs/data/src/` folder of your project.\n\n6 - Point a browser to the web-app directory\n\n\n\n\n## Creating the Documentation DocSet\nFollow the instruction for `typedoc` in commenting the code and set the `json` option to create a\njson file containing the documentation. See the Configuration section below for details.\n\nIn addition to the documented source files, `hsDocs` recognizes a special **`overview.ts`** file\nthat will be displayed as a project overview.\nFor this to work, `typedoc` requires the file to have two separate comment entries.\nIf the second comment is missing, `typedoc` will not generate a comment in the DocSet.\n\nDocSets are shown as menu tabs across the top of the window. To include a DocSet in the menu, ensure that the\ncorresponding documentation `.json` file is copied into the `data` folder inside the `hsDocs` staging location\nfor the http server. Then edit the `index.json` file to include the documentation file name in the \"docs\" section.\n\n### Modules\nEach source file is considered to be a `module`. Modules are shown in the left-hand overview panel of the main `hsDocs` window.\nAlternatively, a `@module` statement in the summary comment at the top of a file will create, or add to, a module of the specified name.\nThis encourages to separate code into files without cluttering the overview.\n\n### Linking across the docsets\nLinks to items across the docsets can be placed via a link directive:\n- \"{@link [*docset*:]*module*.*item* linked text}\",\n\nwhere\n- *docset* optional; the name of the docset. If omitted, a link within the current docSet will be created\n- *module* is name of the module to link to;\nif *module* is `overview`, or unspecified, the link will point to the docset overview page.\n- *item* is the name, or period-separated path, of the item within the module.\n- *linked text* is displayed with a link to path within module\n\nExamples:\n- '{@link overview this hsDocs overview}' -> {@link overview this hsDocs overview}\n- '{@link hsDocs: this hsDocs overview}' -> {@link hsDocs: this hsDocs overview}\n- '{@link hsDocs:DocSets.DocSets.add the `add` function}' --> {@link hsDocs:DocSets.DocSets.add the `add` function}\n- '{@link DocSets.DocSets.add the `add` function}' --> {@link DocSets.DocSets.add the `add` function}\n\n\n### Mithril Code Examples\n`hsDocs` supports creating inline code examples in comment sections as explained\nin the {@link hsDocs:view.MainExample MainExample overview}.\n<example>\n<file name=\"script.js\">\nlet tl = [10, 10];\n\nconst rnd = () => Math.floor(80*Math.random());\n\nfunction click() { tl = tl.map(i => rnd()); }\n\nm.mount(root, {\n    view: () => m('.myBlock', {\n        onclick:click,\n        style:`top:${tl[0]}%; left:${tl[1]}%;`\n    }, m('', 'click me'))})\n</file>\n<file name=\"style.css\">\n.myBlock {\n    text-align:center;\n    color: white;\n    background-color: red;\n    position:relative;\n    width:  20%;\n    height: 30%;\n}\n.myBlock div {\n    padding-top: 40%;\n}\n</file>\n</example>\n\n## Configuring typedoc\nAs an example, we use grunt-typedoc with the following configuration:\n\n### tsconfig.json:\nA `tsconfig.json` file seems to be required by typedoc. The file can be empty\n\n### Gruntfile:\n<code>module.exports = function(grunt) {\n...\ntypedoc: {\ncode: {\noptions: {\ntsconfig: 'typedoc.json',\njson:   './docs/hsDocs.json',\nout:    './docs',\nmode:   'modules',\nname:   'hsDocs'\n}\nsrc: ['src/*.ts', '!src/*.spec.ts']\n}\n},\n\n...\ngrunt.loadNpmTasks('grunt-typedoc');\n...\ngrunt.registerTask('doc', ['typedoc']);\n}\n</code>\n\n## Dependencies\n### For creating the docsets:\n- [typedoc](http://typedoc.org)\n\n### For rendering the docsets:\n- [Mithril](https://mithril.js.org)\n- [showdown](https://github.com/showdownjs/showdown)\n- [hsLayout]\n- [webpack]\n\n## Structural Code Overview\nThe main entry point for the web-app is index.ts, which initiates loading the docsets\nand sets up a mithril {@link hsDocs:Router router}\n\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 37,
			"name": "\"view/DocsMenu\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/DocsMenu.ts",
			"children": [
				{
					"id": 38,
					"name": "DocsMenu",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates the title menu for selecting between the different docsets.\nInstantiate the DocsMenu via a standard `mithril` call:```\n   m(DocsMenu, { docSet:<pathToIndexFile>})\n```\nDocsMenu performs the following actions:\n- for the first call of the view lifecycle hook, the available docSets are loaded.\n  DocsMenu searches for an index `json` file at the location specified in the\n  `docSet` field of the `node.attrs` parameter. If none is specified, the\n  default is used as specified in the {@link hsDocs:DocSets.FILE DocSets FILE} setting.\n- DocsMenu retrieves all available docSets via {@link hsDocs:DocSets.DocSets.get DocSets.get}.\n- DocsMenu creates a `SelectorDesc` structure with a {@link hsWidget:hsSelector.SelectorDesc.clicked `clicked`} callback that initiates a route change\n  to the selected docSet"
					},
					"children": [
						{
							"id": 39,
							"name": "docSet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "view/DocsMenu.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 46,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 3,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.style"
							}
						},
						{
							"id": 47,
							"name": "getCSS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 48,
									"name": "getCSS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 49,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.getCSS"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 5,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.getCSS"
							}
						},
						{
							"id": 43,
							"name": "getComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 44,
									"name": "getComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 45,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"name": "Layout.getComponents"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/DocsMenu.ts",
									"line": 39,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Layout.getComponents"
							}
						},
						{
							"id": 40,
							"name": "getDesc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 41,
									"name": "getDesc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 42,
											"name": "attrs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SelectorDesc"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/DocsMenu.ts",
									"line": 23,
									"character": 19
								}
							]
						},
						{
							"id": 50,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 51,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 52,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 7,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								39,
								46
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								47,
								43,
								40,
								50
							]
						}
					],
					"sources": [
						{
							"fileName": "view/DocsMenu.ts",
							"line": 20,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Layout"
						}
					]
				},
				{
					"id": 53,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "view/DocsMenu.ts",
							"line": 4,
							"character": 56
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " gLog('DocsMenu')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						38
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						53
					]
				}
			],
			"sources": [
				{
					"fileName": "view/DocsMenu.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 108,
			"name": "\"view/LeftNav\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/LeftNav.ts",
			"comment": {
				"shortText": "LeftNav: Responsible for constructing the left-hand navigation pane."
			},
			"children": [
				{
					"id": 109,
					"name": "LeftNav",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constructs the left-hand navigation pane"
					},
					"children": [
						{
							"id": 113,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 3,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.style"
							}
						},
						{
							"id": 114,
							"name": "getCSS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "getCSS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 116,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.getCSS"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 5,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.getCSS"
							}
						},
						{
							"id": 110,
							"name": "getComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 111,
									"name": "getComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 112,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"name": "Layout.getComponents"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/LeftNav.ts",
									"line": 17,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Layout.getComponents"
							}
						},
						{
							"id": 117,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 118,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 119,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 7,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								113
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								114,
								110,
								117
							]
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 16,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Layout"
						}
					]
				},
				{
					"id": 127,
					"name": "entries",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 128,
							"name": "entries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "processes a group of entries, e.g. Variables, Functions, or Classes."
							},
							"parameters": [
								{
									"id": 129,
									"name": "group",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the group structure within the docset"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 130,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the entire module docset"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 131,
									"name": "field",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the field ID to be displayed on the main panel\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 103,
							"character": 16
						}
					]
				},
				{
					"id": 132,
					"name": "exportAscending",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 133,
							"name": "exportAscending",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sorting function: sort first by exported status, then alphabetically."
							},
							"parameters": [
								{
									"id": 134,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 135,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 141,
							"character": 24
						}
					]
				},
				{
					"id": 120,
					"name": "navList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 121,
							"name": "navList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the list if modules (`*.ts` files)"
							},
							"parameters": [
								{
									"id": 122,
									"name": "docSet",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 123,
									"name": "field",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Vnode"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 26,
							"character": 16
						}
					]
				},
				{
					"id": 124,
					"name": "ignoreModules",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "modules to ignore in the list"
					},
					"children": [
						{
							"id": 126,
							"name": "index",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/LeftNav.ts",
									"line": 92,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 125,
							"name": "overview",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/LeftNav.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								126,
								125
							]
						}
					],
					"sources": [
						{
							"fileName": "view/LeftNav.ts",
							"line": 90,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						109
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						127,
						132,
						120
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						124
					]
				}
			],
			"sources": [
				{
					"fileName": "view/LeftNav.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 212,
			"name": "\"view/MainComment\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/MainComment.ts",
			"comment": {
				"shortText": "Processing of comments."
			},
			"children": [
				{
					"id": 216,
					"name": "comment",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 217,
							"name": "comment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Shortended comment processing. This form is used to report on subitems below the main panel item.\nIf `short` is true, only the first paragraph of the main comment will be returned. Otherwise,\nthis function creates a full comment including an inline list of parameters and the return value",
								"returns": "a vnode representing the comment entries\n"
							},
							"parameters": [
								{
									"id": 218,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to scan for comments"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 219,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "if true, only the first paragraph of the main comment is processed."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 35,
							"character": 23
						}
					]
				},
				{
					"id": 213,
					"name": "commentLong",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 214,
							"name": "commentLong",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Main comment processing. The result appears directly below the title in the main panel.\nFunction parameters are not reported in short form here since it is assumed they will be listed\nindividually below the main comment",
								"returns": "a vnode representing the comment entries\n"
							},
							"parameters": [
								{
									"id": 215,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to scan for comments"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 17,
							"character": 27
						}
					]
				},
				{
					"id": 228,
					"name": "commentRemainder",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 229,
							"name": "commentRemainder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 230,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Vnode"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 81,
							"character": 25
						}
					]
				},
				{
					"id": 234,
					"name": "mainCommentParams",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 235,
							"name": "mainCommentParams",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 236,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 110,
							"character": 26
						}
					]
				},
				{
					"id": 231,
					"name": "otherCommentTags",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 232,
							"name": "otherCommentTags",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 233,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Vnode"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 98,
							"character": 25
						}
					]
				},
				{
					"id": 237,
					"name": "prettifyCode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 238,
							"name": "prettifyCode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "finds segments of `<code>...</code>` in `comment` and replaces them with a prettified version.\nCurrently the function performs operations in this sequence:\n- add indentation for brackets {...}\n- wrap the &lt;code&gt;...&lt;/code&gt; part within &lt;pre&gt;...&lt;/pre&gt; brackets\n- apply markdown syntax\n- wrap results in a trusted mithril node"
							},
							"parameters": [
								{
									"id": 239,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment comment"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 240,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "only return the first paragraph\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 131,
							"character": 21
						}
					]
				},
				{
					"id": 224,
					"name": "returns",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 225,
							"name": "returns",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the `returns` message for a function or method."
							},
							"parameters": [
								{
									"id": 226,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 227,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 73,
							"character": 16
						}
					]
				},
				{
					"id": 220,
					"name": "textOrShortTextOrDescription",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 221,
							"name": "textOrShortTextOrDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Report the item's description. This can come in different forms that are all handled here:\n- comment.shortText: <description>\n- comment.text: <description>\n- comment.tags[{tag:'description}, text:<description>]\nAny resulting comment will be translated from markdown to html and returned as a `Vnode`."
							},
							"parameters": [
								{
									"id": 222,
									"name": "comment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comment object to parse"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 223,
									"name": "short",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "boolean; if true, only the first paragraph of the description will be returned\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainComment.ts",
							"line": 60,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						216,
						213,
						228,
						234,
						231,
						237,
						224,
						220
					]
				}
			],
			"sources": [
				{
					"fileName": "view/MainComment.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 241,
			"name": "\"view/MainDetail\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/MainDetail.ts",
			"children": [
				{
					"id": 242,
					"name": "MainDetail",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates Documentation on the main panel"
					},
					"children": [
						{
							"id": 246,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 3,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.style"
							}
						},
						{
							"id": 247,
							"name": "getCSS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 248,
									"name": "getCSS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 249,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.getCSS"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 5,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.getCSS"
							}
						},
						{
							"id": 243,
							"name": "getComponents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 244,
									"name": "getComponents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 245,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"name": "Layout.getComponents"
									}
								}
							],
							"sources": [
								{
									"fileName": "view/MainDetail.ts",
									"line": 16,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Layout.getComponents"
							}
						},
						{
							"id": 250,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 251,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 252,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Layout.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/view/Layout.d.ts",
									"line": 7,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Layout.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								246
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								247,
								243,
								250
							]
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 15,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Layout"
						}
					]
				},
				{
					"id": 253,
					"name": "getOverview",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 254,
							"name": "getOverview",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if the project overview is being requested and returns the overview,\nor `undefined` if not available",
								"returns": "Vnode containing the overview file, or `undefined`\n"
							},
							"parameters": [
								{
									"id": 255,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 256,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module name to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 32,
							"character": 20
						}
					]
				},
				{
					"id": 285,
					"name": "itemChild",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 286,
							"name": "itemChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 287,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 288,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "mdl"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Vnode"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 158,
							"character": 18
						}
					]
				},
				{
					"id": 281,
					"name": "itemDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 282,
							"name": "itemDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 283,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 284,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 143,
							"character": 23
						}
					]
				},
				{
					"id": 257,
					"name": "itemDoc",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 258,
							"name": "itemDoc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates documentation for standard items in the main panel"
							},
							"parameters": [
								{
									"id": 259,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to document on the main panel\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 46,
							"character": 16
						}
					]
				},
				{
					"id": 275,
					"name": "member",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 276,
							"name": "member",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 277,
									"name": "group",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 278,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 279,
									"name": "statc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 280,
									"name": "publc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 99,
							"character": 15
						}
					]
				},
				{
					"id": 267,
					"name": "members",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 268,
							"name": "members",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 269,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 270,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 75,
							"character": 16
						}
					]
				},
				{
					"id": 260,
					"name": "overviewDoc",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 261,
							"name": "overviewDoc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates documentation for the project overview in the main panel"
							},
							"parameters": [
								{
									"id": 262,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to document on the main panel\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 59,
							"character": 20
						}
					]
				},
				{
					"id": 271,
					"name": "parameter",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 272,
							"name": "parameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 273,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 274,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 93,
							"character": 18
						}
					]
				},
				{
					"id": 263,
					"name": "title",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 264,
							"name": "title",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "renders the title of the main panel"
							},
							"parameters": [
								{
									"id": 265,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the module to document"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 266,
									"name": "sig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a signature of the module, or the the module itself\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainDetail.ts",
							"line": 71,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						242
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						253,
						285,
						281,
						257,
						275,
						267,
						260,
						271,
						263
					]
				}
			],
			"sources": [
				{
					"fileName": "view/MainDetail.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 147,
			"name": "\"view/MainExample\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/MainExample.ts",
			"comment": {
				"shortText": "Comment sections may contain code examples that demonstrate code behaviour and usage.",
				"text": "`hsDocs` will interpret and execute Javascript instructions within a `<file name='script.js'>` tag.\nand stylesheet instructions with a &lt;`file name='style.css'`&gt; tag, as in following example (also see Example below):\n<code>\n    &lt;example&gt;\n    <file name='script.js'>\n    m.mount(root, {\n        view:() => m(hslayout.Layout, { columns:[],\n            content:['first line','second line')]\n        })\n    });\n    </file>\n\n    <file name='style.css'>\n    .hsLeaf {\n        color: blue;\n    }\n    </file>\n    &lt;/example&gt;\n</code>\n\n### Scripts\nScripts are enclosed by `<file name='script.js'>` and `</file>` tags and are intended to be live examples for\nexplaining some concept of the module are contained in.\n\nhsDocs internally uses the [global Function object][Function] to parse and execute the script.\nThus the script runs in the global scope and has access to global objects. A number of additional objects are provided\nas parameters in the `Function` constructor and are thus available to the script.\nhsDocs currently provides the following namespaces as parameters\nfor use in the scripts:\n- **m**: the `Mithril` m function\n- **layout**: the {@link hsLayout: `hsLayout`} namespace, providing functions to layout the browser window.\n- **widget**: the {@link hsGraph: `hsGraph`} namespace, providing various UI widget functions.\n- **root**: the DOM element to attach content to.\n\nScripts can use and manipulate any of the provided objects.\n#### Using Mithril:\nmount a `mithril Vnode` on the provided root DOM element using `m.mount` or `m.render`.\nDo not use `m.route` as only a single call is allowed per web app and that is used to manage the\nmain hsDocs site menu and navigation.\n```\nm.mount(root, { view:() => m('div', 'content')});\n```\n#### Using d3:\n```\nconst base = d3.select(root);\n const svg = base.append('svg')\n    .classed('baseSVG', true)\n    .attr('height', '100%')\n    .attr('width', '100%')\n    .attr('preserveAspectRatio', 'xMinYMin meet');\n```\n\n#### Configuring the `example`\nThe `&lt;example&gt` accepts additional arguments to configure the example:\n- height=<numper>px   the height of the example box; defaults to 300\n- libs={<export name>:<path>}   a list of additional libraries to load. `export name` is the symbol exported by the library.\nThis symbol will be available to the script. The main intent is to load the library being documented so that its features\ncan be illustrated by the example script.\nFor example:\n<code>\n&lt;example height=500px libs={hsGraphd3:'hsGraphd3',d3:'https://d3js.org/d3.v5.min.js'}&gt\n</code>\nIf `path` is a module nane (e.g. 'hsDocs'),\nthis involves the following attempts\nat resolving the library path:\n1. load from 'node_modules/<path.toLowerCase()>/<path>.js, relative to the current web page.\n2. load from 'https://helpfulscripts.github.io/<path>/<path>.js'\nIf `path` is structured, i.e. contains '/', it is requested as is.\n\n[Function]:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\n\n### Styles\nStyles will be automatically sandboxed so they are valid only within the enclosing example tags.\nThis is achieved by prefixing css tags with a unique exmple ID and allows multiple examples to co-exist on the same page.\nIn the DOM, the example ID is assgned top the &lt;example&gt; tag.\nUse `$exampleID` as css tag in the `css` section of the example to refer to the &lt;example&gt; element,\nas shown below.\n\n### Example\n<example>\n<file name='script.js'>\nm.mount(root, {\n    view:() => m(hslayout.Layout, {\n        css:'.myExample',\n        columns:[],\n        content:[\n            'left column',\n            'right column'\n        ]\n    })\n});\n</file>\n<file name='style.css'>\n$exampleID { height: 200px;}\n.hs-layout {\n    margin:0;\n}\n.myExample {\n    color: red;\n    font-weight:bold;\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 148,
					"name": "Attribute",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 149,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 130,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 150,
							"name": "libs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 131,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 151,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 152,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 153,
												"name": "name",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 131,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								149,
								150
							]
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 129,
							"character": 19
						}
					]
				},
				{
					"id": 154,
					"name": "CommentDescriptor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "describes an executable comment example"
					},
					"children": [
						{
							"id": 168,
							"name": "activeSrcPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 148,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "attrs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 144,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Attribute",
								"id": 148
							}
						},
						{
							"id": 155,
							"name": "created",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 140,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 158,
							"name": "desc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SelectorDesc"
							}
						},
						{
							"id": 156,
							"name": "exampleID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 141,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 167,
							"name": "executeSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 147,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": ""
							}
						},
						{
							"id": 157,
							"name": "menuID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 142,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 160,
							"name": "pages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 145,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 161,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 162,
											"name": "string",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "view/MainExample.ts",
													"line": 145,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												162
											]
										}
									],
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 145,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 163,
							"name": "runScript",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 146,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 164,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 165,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 166,
													"name": "root",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 146,
											"character": 15
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								168,
								159,
								155,
								158,
								156,
								167,
								157,
								160,
								163
							]
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 139,
							"character": 27
						}
					]
				},
				{
					"id": 175,
					"name": "gInitialized",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Map containing various exampkle configurations"
					},
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 154,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 176,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 177,
									"name": "string",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "view/MainExample.ts",
											"line": 154,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 154
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										177
									]
								}
							],
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 154,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 203,
					"name": "hsGraphd3",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 335,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 169,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 117,
							"character": 57
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " _log('MainExample')"
				},
				{
					"id": 190,
					"name": "addExampleStructure",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 191,
							"name": "addExampleStructure",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "returns a parameterless function that can be called via setTimeout to\nmount the menu and execute the script function provided in `IDs`."
							},
							"parameters": [
								{
									"id": 192,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the `CommentDescriptor` to execute on.\n"
									},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 154
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CommentDescriptor",
								"id": 154
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 254,
							"character": 28
						}
					]
				},
				{
					"id": 181,
					"name": "createExecuteScript",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 182,
							"name": "createExecuteScript",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 183,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 154
									}
								},
								{
									"id": 184,
									"name": "exmpl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 200,
							"character": 34
						}
					]
				},
				{
					"id": 204,
					"name": "decodeAttrs",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 205,
							"name": "decodeAttrs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 206,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 154
									}
								},
								{
									"id": 207,
									"name": "cmd",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 208,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 337,
							"character": 26
						}
					]
				},
				{
					"id": 178,
					"name": "example",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 179,
							"name": "example",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the example configuration, generates the DOM hook, and sets up the example execution.\n`example` takes a context map of the form `{ name:module, ...}` containing libraries to be used\nwithin the example, and returns a function that can be used in calls to `string.replace`.\nSee the following example:\n<code><pre>\nimport * as layout from \"layout\";\ntext = text.replace(/<example>([\\S\\s]*?)<\\/example>/gi, example({layout:layout}));\n</pre></code>\nThe modules `m`, `hsLayout`, and `hsGraph` will be added by default as\n` { m: m, layout: layout, widget: widget } `"
							},
							"parameters": [
								{
									"id": 180,
									"name": "exmpl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the example string extracted from the comment, including the `<example>` tags."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 170,
							"character": 23
						}
					]
				},
				{
					"id": 196,
					"name": "executeError",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 197,
							"name": "executeError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 198,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 303,
							"character": 21
						}
					]
				},
				{
					"id": 193,
					"name": "executeScript",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 194,
							"name": "executeScript",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "execute the provided script"
							},
							"parameters": [
								{
									"id": 195,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "provides the context in which the script is exceuted/\n"
									},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 154
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CommentDescriptor",
								"id": 154
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 287,
							"character": 22
						}
					]
				},
				{
					"id": 199,
					"name": "getCommentDescriptor",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 200,
							"name": "getCommentDescriptor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fills in all fields of the CommentDescriptor provided as `IDs`.",
								"returns": "the script to execute, as a string\n"
							},
							"parameters": [
								{
									"id": 201,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the CommentDescriptor to complete"
									},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 154
									}
								},
								{
									"id": 202,
									"name": "example",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the example string, including <example> tag"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 313,
							"character": 35
						}
					]
				},
				{
					"id": 188,
					"name": "getNewID",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 189,
							"name": "getNewID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates a new random example ID for each call."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 245,
							"character": 17
						}
					]
				},
				{
					"id": 185,
					"name": "initDesc",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 186,
							"name": "initDesc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates the example configuration"
							},
							"parameters": [
								{
									"id": 187,
									"name": "IDs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CommentDescriptor",
										"id": 154
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CommentDescriptor",
								"id": 154
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 221,
							"character": 17
						}
					]
				},
				{
					"id": 209,
					"name": "loadScript",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 210,
							"name": "loadScript",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "attempts to load a library for the specified `path`. If `path` is a module nane (e.g. 'hsDocs'),\nthis involves the following attempts\nat resolving the library path:\n1. load from 'node_modules/<path.toLowerCase()>/<path>.js, relative to the current web page.\n2. load from 'https://helpfulscripts.github.io/<path>/<path>.js'\nIf `path` is structured, i.e. contains '/', it is requested as is."
							},
							"parameters": [
								{
									"id": 211,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "module name, such as 'hsDocs'\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 375,
							"character": 25
						}
					]
				},
				{
					"id": 170,
					"name": "modules",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 173,
							"name": "hslayout",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 125,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hslayout/index\""
									}
								]
							},
							"defaultValue": "   Promise.resolve(hslayout)"
						},
						{
							"id": 172,
							"name": "hsutil",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 124,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hsutil/index\""
									}
								]
							},
							"defaultValue": "     Promise.resolve(hsutil)"
						},
						{
							"id": 174,
							"name": "hswidget",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 126,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "reference",
										"name": "\"/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/node_modules/hswidget/index\""
									}
								]
							},
							"defaultValue": "   Promise.resolve(hswidget)"
						},
						{
							"id": 171,
							"name": "m",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "view/MainExample.ts",
									"line": 123,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": "          Promise.resolve(m)"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								173,
								172,
								174,
								171
							]
						}
					],
					"sources": [
						{
							"fileName": "view/MainExample.ts",
							"line": 122,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						148,
						154
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						175,
						203,
						169
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						190,
						181,
						204,
						178,
						196,
						193,
						199,
						188,
						185,
						209
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						170
					]
				}
			],
			"sources": [
				{
					"fileName": "view/MainExample.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 60,
			"name": "\"view/Parts\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/Parts.ts",
			"children": [
				{
					"id": 62,
					"name": "SourceBase",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 6,
							"character": 16
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "data/src/"
					},
					"defaultValue": "\"data/src/\""
				},
				{
					"id": 61,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 4,
							"character": 49
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType"
					},
					"defaultValue": " _log('Parts')"
				},
				{
					"id": 96,
					"name": "defaultVal",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 97,
							"name": "defaultVal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "adds a default value, if defined"
							},
							"parameters": [
								{
									"id": 98,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 99,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 152,
							"character": 26
						}
					]
				},
				{
					"id": 77,
					"name": "extensionOf",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 78,
							"name": "extensionOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 79,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 51,
							"character": 27
						}
					]
				},
				{
					"id": 63,
					"name": "flags",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 64,
							"name": "flags",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 65,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 66,
									"name": "ignore",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 10,
							"character": 21
						}
					]
				},
				{
					"id": 80,
					"name": "inheritedFrom",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 81,
							"name": "inheritedFrom",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 82,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 63,
							"character": 29
						}
					]
				},
				{
					"id": 70,
					"name": "itemName",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 71,
							"name": "itemName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 72,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 73,
									"name": "sub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 42,
							"character": 24
						}
					]
				},
				{
					"id": 74,
					"name": "itemTooltip",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 75,
							"name": "itemTooltip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 76,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 47,
							"character": 27
						}
					]
				},
				{
					"id": 67,
					"name": "kindString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 68,
							"name": "kindString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 69,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 38,
							"character": 26
						}
					]
				},
				{
					"id": 86,
					"name": "libLink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 87,
							"name": "libLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates a library link on the specified `name`.\nThe link points to `/api/<lib>/<id>`"
							},
							"parameters": [
								{
									"id": 88,
									"name": "css",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the css tag selector to use"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 89,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the lib string to point to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 90,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the id number to point to"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 91,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name on which to formt he link\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 101,
							"character": 23
						}
					]
				},
				{
					"id": 104,
					"name": "makeID",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 105,
							"name": "makeID",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 106,
									"name": "section",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 107,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 214,
							"character": 22
						}
					]
				},
				{
					"id": 92,
					"name": "signature",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 93,
							"name": "signature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "creates a function or method signature"
							},
							"parameters": [
								{
									"id": 94,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 95,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 108,
							"character": 25
						}
					]
				},
				{
					"id": 83,
					"name": "sourceLink",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 84,
							"name": "sourceLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 85,
									"name": "mdl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 76,
							"character": 26
						}
					]
				},
				{
					"id": 100,
					"name": "type",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 101,
							"name": "type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 102,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 103,
									"name": "lib",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Parts.ts",
							"line": 161,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						62,
						61
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						96,
						77,
						63,
						80,
						70,
						74,
						67,
						86,
						104,
						92,
						83,
						100
					]
				}
			],
			"sources": [
				{
					"fileName": "view/Parts.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 54,
			"name": "\"view/Tooltip\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsApps/hsDocs/src/view/Tooltip.ts",
			"children": [
				{
					"id": 55,
					"name": "tooltip",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 56,
							"name": "tooltip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 57,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58,
									"name": "tip",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "view/Tooltip.ts",
							"line": 3,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						55
					]
				}
			],
			"sources": [
				{
					"fileName": "view/Tooltip.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				289,
				328,
				136,
				329,
				37,
				108,
				212,
				241,
				147,
				60,
				54
			]
		}
	]
}